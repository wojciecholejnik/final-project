{"ast":null,"code":"var _jsxFileName = \"/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Product/Product.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\nimport styles from './Product.module.scss';\n\nclass Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getOne = ({\n      id,\n      type\n    }) => {\n      if (type === 'cake') {\n        return this.props.cakes.find(product => product._id === id);\n      } else {\n        return this.props.cakes.cupcakes.find(product => product._id === id);\n      }\n    };\n  }\n\n  render() {\n    const type = this.props.match.params.id.split('-')[0];\n    const id = this.props.match.params.id.split('-')[1];\n    const product = this.getOne(id, type);\n    console.log(product);\n    return React.createElement(\"div\", {\n      className: clsx(styles.root),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Product\"));\n  }\n\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n  match: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state)\n}); // const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n\nconst Container = connect(mapStateToProps)(Component);\nexport { // Component as Product,\nContainer as Product, Component as ProductComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Product/Product.js"],"names":["React","PropTypes","clsx","connect","getCakes","getCupcakes","styles","Component","getOne","id","type","props","cakes","find","product","_id","cupcakes","render","match","params","split","console","log","root","propTypes","array","object","mapStateToProps","state","Container","Product","ProductComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,8BAAtC;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,SAAN,SAAwBP,KAAK,CAACO,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SACtCC,MADsC,GAC7B,CAAC;AAACC,MAAAA,EAAD;AAAKC,MAAAA;AAAL,KAAD,KAAgB;AACvB,UAAGA,IAAI,KAAK,MAAZ,EAAmB;AACjB,eAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,IAAjB,CAAsBC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBN,EAAjD,CAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAKE,KAAL,CAAWC,KAAX,CAAiBI,QAAjB,CAA0BH,IAA1B,CAA+BC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBN,EAA1D,CAAP;AACD;AACF,KAPqC;AAAA;;AAStCQ,EAAAA,MAAM,GAAE;AACN,UAAMP,IAAI,GAAG,KAAKC,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBV,EAAxB,CAA2BW,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAAb;AACA,UAAMX,EAAE,GAAG,KAAKE,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBV,EAAxB,CAA2BW,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAAX;AACA,UAAMN,OAAO,GAAG,KAAKN,MAAL,CAAYC,EAAZ,EAAgBC,IAAhB,CAAhB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AAEA,WACE;AAAK,MAAA,SAAS,EAAEZ,IAAI,CAACI,MAAM,CAACiB,IAAR,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD;;AApBqC;;AAuBxChB,SAAS,CAACiB,SAAV,GAAsB;AACpBZ,EAAAA,KAAK,EAAEX,SAAS,CAACwB,KADG;AAEpBT,EAAAA,QAAQ,EAAEf,SAAS,CAACwB,KAFA;AAGpBP,EAAAA,KAAK,EAAEjB,SAAS,CAACyB;AAHG,CAAtB;;AASA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChChB,EAAAA,KAAK,EAAER,QAAQ,CAACwB,KAAD,CADiB;AAEhCZ,EAAAA,QAAQ,EAAEX,WAAW,CAACuB,KAAD;AAFW,CAAL,CAA7B,C,CAKA;AACA;AACA;;;AAEA,MAAMC,SAAS,GAAG1B,OAAO,CAACwB,eAAD,CAAP,CAAyBpB,SAAzB,CAAlB;AAEA,SACE;AACAsB,SAAS,IAAIC,OAFf,EAGEvB,SAAS,IAAIwB,gBAHf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport clsx from 'clsx';\n\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\n\nimport styles from './Product.module.scss';\n\nclass Component extends React.Component {\n  getOne = ({id, type}) => {\n    if(type === 'cake'){\n      return this.props.cakes.find(product => product._id === id);\n    } else {\n      return this.props.cakes.cupcakes.find(product => product._id === id);\n    }\n  };\n\n  render(){\n    const type = this.props.match.params.id.split('-')[0];\n    const id = this.props.match.params.id.split('-')[1];\n    const product = this.getOne(id, type);\n    console.log(product);\n\n    return (\n      <div className={clsx(styles.root)}>\n        <h2>Product</h2>\n      </div>\n    );\n  }\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n  match: PropTypes.object,\n};\n\n\n\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst Container = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as Product,\n  Container as Product,\n  Component as ProductComponent,\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Order/Order.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton'; // import MoreIcon from '@material-ui/icons/More';\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport styles from './Order.module.scss';\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\nconst useStyles = makeStyles(theme => ({\n  image: {\n    height: '100%',\n    objectFit: 'cover'\n  },\n  gridList: {\n    flexWrap: 'nowrap'\n  },\n  title: {\n    color: '#EF98AE'\n  },\n  swiperDiv: {\n    marginBottom: '40px'\n  }\n}));\n\nfunction Component({\n  cakes,\n  cupcakes\n}) {\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    className: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.swiperDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"These are our cakes: \"), React.createElement(GridList, {\n    spacing: 15,\n    className: classes.gridList,\n    cols: Math.max(document.documentElement.clientWidth) > 600 ? 2.2 : 1.2,\n    cellHeight: 230,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, cakes.map(tile => React.createElement(GridListTile, {\n    key: tile._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: classes.image,\n    src: require('../../../images/products/cakes/' + tile.img),\n    alt: tile.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(GridListTileBar, {\n    title: tile.title,\n    actionIcon: React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(VisibilityIcon, {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: classes.swiperDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"... and cupcakes: \"), React.createElement(GridList, {\n    className: classes.gridList,\n    cols: Math.max(document.documentElement.clientWidth) > 600 ? 2.2 : 1.2,\n    cellHeight: 230,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, cupcakes.map(tile => React.createElement(GridListTile, {\n    key: tile._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: classes.image,\n    src: require('../../../images/products/cupcakes/' + tile.img),\n    alt: tile.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(GridListTileBar, {\n    title: tile.title,\n    actionIcon: React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(VisibilityIcon, {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))))));\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state)\n}); // const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n\nconst Container = connect(mapStateToProps)(Component);\nexport { // Component as Order,\nContainer as Order, Component as OrderComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Order/Order.js"],"names":["React","PropTypes","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","VisibilityIcon","styles","connect","getCakes","getCupcakes","useStyles","theme","image","height","objectFit","gridList","flexWrap","title","color","swiperDiv","marginBottom","Component","cakes","cupcakes","classes","root","Math","max","document","documentElement","clientWidth","map","tile","_id","require","img","propTypes","array","mapStateToProps","state","Container","Order","OrderComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\n// import MoreIcon from '@material-ui/icons/More';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport styles from './Order.module.scss';\n\n\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    height: '100%',\n    objectFit: 'cover',\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n  },\n  title: {\n    color: '#EF98AE',\n  },\n  swiperDiv: {\n    marginBottom: '40px',\n  },\n}));\n\nfunction Component ({cakes, cupcakes}) {\n  const classes = useStyles();\n\n  return (\n    <div className={styles.root}>\n      {/* Cakes horizontal swiper */}\n      <div className={classes.swiperDiv}>\n        <h2 className={styles.title}>These are our cakes: </h2>\n        <GridList spacing={15} className={classes.gridList} cols={Math.max(document.documentElement.clientWidth) > 600 ? 2.2 : 1.2} cellHeight={230}>\n          {cakes.map((tile) => (\n            <GridListTile key={tile._id}>\n              <img className={classes.image} src={require('../../../images/products/cakes/' + tile.img)} alt={tile.title} />\n              <GridListTileBar\n                title={tile.title}\n                actionIcon={\n                  <IconButton >\n                    <VisibilityIcon className={classes.title} />\n                  </IconButton>\n                }\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n      {/* Cupcakes horizontal swiper */}\n      <div className={classes.swiperDiv}>\n        <h2 className={styles.title}>... and cupcakes: </h2>\n        <GridList className={classes.gridList} cols={Math.max(document.documentElement.clientWidth) > 600 ? 2.2 : 1.2} cellHeight={230}>\n          {cupcakes.map((tile) => (\n            <GridListTile key={tile._id}>\n              <img className={classes.image} src={require('../../../images/products/cupcakes/' + tile.img)} alt={tile.title} />\n              <GridListTileBar\n                title={tile.title}\n                actionIcon={\n                  <IconButton >\n                    <VisibilityIcon className={classes.title} />\n                  </IconButton>\n                }\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n    </div>\n  );\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst Container = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as Order,\n  Container as Order,\n  Component as OrderComponent,\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Product/Product.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\nimport styles from './Product.module.scss';\n\nclass Component extends React.Component {\n  render() {\n    const type = this.props.match.params.id.split('-')[0];\n    const id = this.props.match.params.id.split('-')[1];\n\n    const getOne = ({\n      products,\n      id,\n      type\n    }) => {\n      if (type === 'cake') {\n        return products.cakes.find(product => product._id === id);\n      } else {\n        return products.cupcakes.find(product => product._id === id);\n      }\n    };\n\n    return React.createElement(\"div\", {\n      className: clsx(styles.root),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Product\"));\n  }\n\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n  match: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state)\n}); // const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n\nconst Container = connect(mapStateToProps)(Component);\nexport { // Component as Product,\nContainer as Product, Component as ProductComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Product/Product.js"],"names":["React","PropTypes","clsx","connect","getCakes","getCupcakes","styles","Component","render","type","props","match","params","id","split","getOne","products","cakes","find","product","_id","cupcakes","root","propTypes","array","object","mapStateToProps","state","Container","Product","ProductComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,8BAAtC;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,SAAN,SAAwBP,KAAK,CAACO,SAA9B,CAAwC;AACtCC,EAAAA,MAAM,GAAE;AACN,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxB,CAA2BC,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAAb;AACA,UAAMD,EAAE,GAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxB,CAA2BC,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAAX;;AACA,UAAMC,MAAM,GAAG,CAAC;AAACC,MAAAA,QAAD;AAAWH,MAAAA,EAAX;AAAeJ,MAAAA;AAAf,KAAD,KAA0B;AACvC,UAAGA,IAAI,KAAK,MAAZ,EAAmB;AACjB,eAAOO,QAAQ,CAACC,KAAT,CAAeC,IAAf,CAAoBC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBP,EAA/C,CAAP;AACD,OAFD,MAEO;AACL,eAAOG,QAAQ,CAACK,QAAT,CAAkBH,IAAlB,CAAuBC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBP,EAAlD,CAAP;AACD;AACF,KAND;;AASA,WACE;AAAK,MAAA,SAAS,EAAEX,IAAI,CAACI,MAAM,CAACgB,IAAR,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD;;AAlBqC;;AAqBxCf,SAAS,CAACgB,SAAV,GAAsB;AACpBN,EAAAA,KAAK,EAAEhB,SAAS,CAACuB,KADG;AAEpBH,EAAAA,QAAQ,EAAEpB,SAAS,CAACuB,KAFA;AAGpBb,EAAAA,KAAK,EAAEV,SAAS,CAACwB;AAHG,CAAtB;;AASA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,KAAK,EAAEb,QAAQ,CAACuB,KAAD,CADiB;AAEhCN,EAAAA,QAAQ,EAAEhB,WAAW,CAACsB,KAAD;AAFW,CAAL,CAA7B,C,CAKA;AACA;AACA;;;AAEA,MAAMC,SAAS,GAAGzB,OAAO,CAACuB,eAAD,CAAP,CAAyBnB,SAAzB,CAAlB;AAEA,SACE;AACAqB,SAAS,IAAIC,OAFf,EAGEtB,SAAS,IAAIuB,gBAHf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport clsx from 'clsx';\n\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\n\nimport styles from './Product.module.scss';\n\nclass Component extends React.Component {\n  render(){\n    const type = this.props.match.params.id.split('-')[0];\n    const id = this.props.match.params.id.split('-')[1];\n    const getOne = ({products, id, type}) => {\n      if(type === 'cake'){\n        return products.cakes.find(product => product._id === id);\n      } else {\n        return products.cupcakes.find(product => product._id === id);\n      }\n    };\n\n\n    return (\n      <div className={clsx(styles.root)}>\n        <h2>Product</h2>\n      </div>\n    );\n  }\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n  match: PropTypes.object,\n};\n\n\n\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst Container = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as Product,\n  Container as Product,\n  Component as ProductComponent,\n};\n"]},"metadata":{},"sourceType":"module"}
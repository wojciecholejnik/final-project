{"ast":null,"code":"var _jsxFileName = \"/Users/wojtas/Desktop/Kodilla/final-project/client/src/components/views/Orders/Orders.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getOrders, loadOrdersRequest } from '../../../redux/ordersRedux';\nimport styles from './Orders.module.scss';\nimport { Loading } from '../../common/Loading/Loading';\n\nclass Component extends React.Component {\n  componentDidMount() {\n    this.props.loadOrders();\n  }\n\n  render() {\n    if (this.props.orders.loading.active) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    } else if (this.props.orders.loading.error) {\n      return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.props.orders.loading.error);\n    } else if (!this.props.orders.loading.active) {\n      const orders = this.props.orders;\n      return React.createElement(\"div\", {\n        className: styles.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, orders.orders.map(order => React.createElement(\"div\", {\n        className: styles.orderContainer,\n        key: order._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Name: \", order.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Order id: \", order._id), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Status: \", order.status), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Phone: \", order.phone, \", E-mail: \", order.email), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Total price: $\", order.totalPrice), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Amount of products: \", order.products.length), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Products:\"), order.products.map(product => React.createElement(\"p\", {\n        key: product.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, product.title, \" x\", product.amount, \" - $\", product.totalCost)))));\n    }\n  }\n\n}\n\nComponent.propTypes = {\n  orders: PropTypes.object,\n  loadOrders: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  orders: getOrders(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadOrders: () => dispatch(loadOrdersRequest())\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\nexport { // Component as Orders,\nContainer as Orders, Component as OrdersComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/client/src/components/views/Orders/Orders.js"],"names":["React","PropTypes","connect","getOrders","loadOrdersRequest","styles","Loading","Component","componentDidMount","props","loadOrders","render","orders","loading","active","error","root","map","order","orderContainer","_id","name","status","phone","email","totalPrice","products","length","product","id","title","amount","totalCost","propTypes","object","func","mapStateToProps","state","mapDispatchToProps","dispatch","Container","Orders","OrdersComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { getOrders, loadOrdersRequest } from '../../../redux/ordersRedux';\n\nimport styles from './Orders.module.scss';\nimport { Loading } from '../../common/Loading/Loading';\n\n\nclass Component extends React.Component{\n  componentDidMount(){\n    this.props.loadOrders();\n  }\n  render(){\n    if(this.props.orders.loading.active){\n      return <Loading />;\n    } else if(this.props.orders.loading.error){\n      return (<h2>{this.props.orders.loading.error}</h2>);\n    } else if(!this.props.orders.loading.active){\n      const { orders } = this.props;\n      return (\n        <div className={styles.root}>\n          {orders.orders.map(order => (\n            <div className={styles.orderContainer} key={order._id}>\n              <p>Name: {order.name}</p>\n              <p>Order id: {order._id}</p>\n              <p>Status: {order.status}</p>\n              <p>Phone: {order.phone}, E-mail: {order.email}</p>\n              <p>Total price: ${order.totalPrice}</p>\n              <p>Amount of products: {order.products.length}</p>\n              <p>Products:</p>\n              {order.products.map(product => (\n                <p key={product.id}>{product.title} x{product.amount} - ${product.totalCost}</p>\n              ))}\n            </div>\n          ))}\n        </div>\n      )\n    }\n  }\n}\n\nComponent.propTypes = {\n  orders: PropTypes.object,\n  loadOrders: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  orders: getOrders(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadOrders: () => dispatch(loadOrdersRequest()),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  // Component as Orders,\n  Container as Orders,\n  Component as OrdersComponent,\n};\n"]},"metadata":{},"sourceType":"module"}
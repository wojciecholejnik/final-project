{"ast":null,"code":"var _jsxFileName = \"/Users/wojtas/Desktop/Kodilla/final-project/client/src/components/views/Order/Order.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport styles from './Order.module.scss';\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes, getProductStats, loadProductsRequest } from '../../../redux/productsRedux';\n\nclass Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      width: Math.max(document.documentElement.clientWidth)\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadProducts();\n  }\n\n  changeWidth() {\n    window.addEventListener('resize', () => {\n      this.setState({\n        width: Math.max(document.documentElement.clientWidth)\n      });\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          cakes = _this$props.cakes,\n          cupcakes = _this$props.cupcakes,\n          stats = _this$props.stats;\n    this.changeWidth();\n\n    if (!stats.active) {\n      return React.createElement(\"div\", {\n        className: styles.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.swiperDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"These are our cakes: \"), React.createElement(GridList, {\n        spacing: 15,\n        className: styles.gridList,\n        cols: this.state.width > 600 ? 2.2 : 1.15,\n        cellHeight: 230,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, cakes.map(tile => React.createElement(GridListTile, {\n        component: NavLink,\n        to: '/product/cake-' + tile._id,\n        key: tile._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: styles.image,\n        src: require('../../../images/products/cakes/' + tile.img),\n        alt: tile.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(GridListTileBar, {\n        title: tile.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: styles.swiperDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"... and cupcakes: \"), React.createElement(GridList, {\n        spacing: 15,\n        className: styles.gridList,\n        cols: this.state.width > 600 ? 2.2 : 1.15,\n        cellHeight: 230,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, cupcakes.map(tile => React.createElement(GridListTile, {\n        component: NavLink,\n        to: '/product/cupcake-' + tile._id,\n        key: tile._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: styles.image,\n        src: require('../../../images/products/cupcakes/' + tile.img),\n        alt: tile.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(GridListTileBar, {\n        className: styles.signature,\n        title: tile.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))))));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n  loadProducts: PropTypes.func,\n  stats: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state),\n  stats: getProductStats(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadProducts: () => dispatch(loadProductsRequest())\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\nexport { // Component as Order,\nContainer as Order, Component as OrderComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/client/src/components/views/Order/Order.js"],"names":["React","PropTypes","NavLink","GridList","GridListTile","GridListTileBar","CircularProgress","styles","connect","getCakes","getCupcakes","getProductStats","loadProductsRequest","Component","state","width","Math","max","document","documentElement","clientWidth","componentDidMount","props","loadProducts","changeWidth","window","addEventListener","setState","render","cakes","cupcakes","stats","active","root","swiperDiv","title","gridList","map","tile","_id","image","require","img","signature","propTypes","array","func","object","mapStateToProps","mapDispatchToProps","dispatch","Container","Order","OrderComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport styles from './Order.module.scss';\n\n\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes, getProductStats, loadProductsRequest } from '../../../redux/productsRedux';\n\n\nclass Component extends React.Component {\n  componentDidMount(){\n    this.props.loadProducts();\n  }\n\n  state = {\n    width: Math.max(document.documentElement.clientWidth),\n  }\n\n  changeWidth(){\n    window.addEventListener('resize', () => {\n      this.setState({width: Math.max(document.documentElement.clientWidth)});\n    });\n  }\n\n\n\n  render(){\n    const {cakes, cupcakes, stats} = this.props;\n    this.changeWidth();\n    if (!stats.active){\n      return (\n        <div className={styles.root}>\n          {/* Cakes horizontal swiper */}\n          <div className={styles.swiperDiv}>\n            <h2 className={styles.title}>These are our cakes: </h2>\n            <GridList spacing={15} className={styles.gridList} cols={this.state.width > 600 ? 2.2 : 1.15} cellHeight={230}>\n              {cakes.map((tile) => (\n                <GridListTile component={NavLink} to={'/product/cake-' + tile._id} key={tile._id}>\n                  <img className={styles.image} src={require('../../../images/products/cakes/' + tile.img)} alt={tile.title} />\n                  <GridListTileBar\n                    title={tile.title}\n                  />\n                </GridListTile>\n              ))}\n            </GridList>\n          </div>\n\n          {/* Cupcakes horizontal swiper */}\n          <div className={styles.swiperDiv}>\n            <h2 className={styles.title}>... and cupcakes: </h2>\n            <GridList spacing={15} className={styles.gridList} cols={this.state.width > 600 ? 2.2 : 1.15} cellHeight={230}>\n              {cupcakes.map((tile) => (\n                <GridListTile component={NavLink} to={'/product/cupcake-' + tile._id } key={tile._id}>\n                  <img className={styles.image} src={require('../../../images/products/cupcakes/' + tile.img)} alt={tile.title} />\n                  <GridListTileBar\n                    className={styles.signature}\n                    title={tile.title}\n                  />\n                </GridListTile>\n              ))}\n            </GridList>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div >\n          <CircularProgress color='primary'/>\n        </div>\n      );\n    }\n  }\n\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n  loadProducts: PropTypes.func,\n  stats: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state),\n  stats: getProductStats(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadProducts: () => dispatch(loadProductsRequest()),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  // Component as Order,\n  Container as Order,\n  Component as OrderComponent,\n};\n"]},"metadata":{},"sourceType":"module"}
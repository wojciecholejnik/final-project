{"ast":null,"code":"import _defineProperty from \"/Users/wojtas/Desktop/Kodilla/final-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport { API_URL } from '../config';\n/* selectors */\n\nexport const getOrders = ({\n  orders\n}) => orders;\n/* action name creator */\n\nconst reducerName = 'orders';\n\nconst createActionName = name => \"app/\".concat(reducerName, \"/\").concat(name);\n/* action types */\n\n\nconst ADD_ORDER = createActionName('ADD_ORDER');\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst LOAD_ORDERS = createActionName('LOAD_ORDERS');\n/* action creators */\n\nexport const addOrder = payload => ({\n  payload,\n  type: ADD_ORDER\n});\nexport const fetchStarted = () => ({\n  type: FETCH_START\n});\nexport const fetchSuccess = () => ({\n  type: FETCH_SUCCESS\n});\nexport const fetchError = payload => ({\n  payload,\n  type: FETCH_ERROR\n});\nexport const loadOrders = payload => ({\n  payload,\n  type: LOAD_ORDERS\n});\n/* thunk creators */\n\nexport const loadOrdersRequest = () => {\n  return async dispatch => {\n    dispatch(fetchStarted());\n\n    try {\n      let orders = await axios.get(\"\".concat(API_URL, \"/orders\"));\n      const allOrders = [];\n      addOrder.push(orders);\n      await dispatch(loadOrders(allOrders));\n      await dispatch(fetchSuccess());\n    } catch (e) {\n      dispatch(fetchError(e.message));\n    }\n  };\n};\n/* reducer */\n\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case ADD_ORDER:\n      {\n        const newOrder = action.payload;\n        statePart.push(newOrder);\n        return statePart;\n      }\n\n    case FETCH_START:\n      {\n        return _objectSpread({}, statePart, {\n          loading: {\n            active: true,\n            error: false\n          }\n        });\n      }\n\n    case FETCH_SUCCESS:\n      {\n        return _objectSpread({}, statePart, {\n          loading: {\n            active: false,\n            error: false\n          },\n          data: action.payload\n        });\n      }\n\n    case FETCH_ERROR:\n      {\n        return _objectSpread({}, statePart, {\n          loading: {\n            active: false,\n            error: action.payload\n          }\n        });\n      }\n\n    case LOAD_ORDERS:\n      {\n        return _objectSpread({}, statePart, {\n          products: action.payload\n        });\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/client/src/redux/ordersRedux.js"],"names":["axios","API_URL","getOrders","orders","reducerName","createActionName","name","ADD_ORDER","FETCH_START","FETCH_SUCCESS","FETCH_ERROR","LOAD_ORDERS","addOrder","payload","type","fetchStarted","fetchSuccess","fetchError","loadOrders","loadOrdersRequest","dispatch","get","allOrders","push","e","message","reducer","statePart","action","newOrder","loading","active","error","data","products"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { API_URL } from '../config';\n\n/* selectors */\nexport const getOrders = ({orders}) => orders;\n\n/* action name creator */\nconst reducerName = 'orders';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst ADD_ORDER = createActionName('ADD_ORDER');\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst LOAD_ORDERS = createActionName('LOAD_ORDERS');\n\n/* action creators */\nexport const addOrder = payload => ({payload, type: ADD_ORDER});\nexport const fetchStarted = () => ({ type: FETCH_START });\nexport const fetchSuccess = () => ({ type: FETCH_SUCCESS });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\nexport const loadOrders = payload => ({ payload, type: LOAD_ORDERS });\n\n/* thunk creators */\nexport const loadOrdersRequest = () => {\n  return async dispatch => {\n    dispatch(fetchStarted());\n    try {\n      let orders = await axios.get(`${API_URL}/orders`);\n      const allOrders = [];\n      addOrder.push(orders);\n      await dispatch(loadOrders(allOrders));\n      await dispatch(fetchSuccess());\n    } catch(e) {\n      dispatch(fetchError(e.message));\n    }\n  };\n};\n\n/* reducer */\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case ADD_ORDER: {\n      const newOrder = action.payload;\n      statePart.push(newOrder);\n      return statePart;\n    }\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_SUCCESS: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        data: action.payload,\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    case LOAD_ORDERS: {\n      return {\n        ...statePart,\n        products: action.payload,\n      };\n    }\n    default:\n      return statePart;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
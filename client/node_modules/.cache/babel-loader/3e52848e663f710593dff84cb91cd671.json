{"ast":null,"code":"var _jsxFileName = \"/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Order/Order.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\nimport styles from './Order.module.scss';\n\nconst Component = ({\n  cakes,\n  cupcakes\n}) => React.createElement(\"div\", {\n  className: clsx(styles.root),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"Cakes\"), cakes.map(cake => React.createElement(\"p\", {\n  key: cake._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, cake.title + ' $' + cake.price)), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"Cupcakes\"), cupcakes.map(cupcake => React.createElement(\"p\", {\n  key: cupcake._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, cupcake.title + ' $' + cupcake.price)));\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state)\n}); // const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n\nconst Container = connect(mapStateToProps)(Component);\nexport { // Component as Order,\nContainer as Order, Component as OrderComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Order/Order.js"],"names":["React","PropTypes","clsx","connect","getCakes","getCupcakes","styles","Component","cakes","cupcakes","root","map","cake","_id","title","price","cupcake","propTypes","array","mapStateToProps","state","Container","Order","OrderComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,8BAAtC;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAChB;AAAK,EAAA,SAAS,EAAEP,IAAI,CAACI,MAAM,CAACI,IAAR,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEGF,KAAK,CAACG,GAAN,CAAUC,IAAI,IACb;AAAG,EAAA,GAAG,EAAEA,IAAI,CAACC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAmBD,IAAI,CAACE,KAAL,GAAa,IAAb,GAAoBF,IAAI,CAACG,KAA5C,CADD,CAFH,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAMGN,QAAQ,CAACE,GAAT,CAAaK,OAAO,IACnB;AAAG,EAAA,GAAG,EAAEA,OAAO,CAACH,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAsBG,OAAO,CAACF,KAAR,GAAgB,IAAhB,GAAuBE,OAAO,CAACD,KAArD,CADD,CANH,CADF;;AAaAR,SAAS,CAACU,SAAV,GAAsB;AACpBT,EAAAA,KAAK,EAAEP,SAAS,CAACiB,KADG;AAEpBT,EAAAA,QAAQ,EAAER,SAAS,CAACiB;AAFA,CAAtB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCZ,EAAAA,KAAK,EAAEJ,QAAQ,CAACgB,KAAD,CADiB;AAEhCX,EAAAA,QAAQ,EAAEJ,WAAW,CAACe,KAAD;AAFW,CAAL,CAA7B,C,CAKA;AACA;AACA;;;AAEA,MAAMC,SAAS,GAAGlB,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,SAAzB,CAAlB;AAEA,SACE;AACAc,SAAS,IAAIC,KAFf,EAGEf,SAAS,IAAIgB,cAHf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport clsx from 'clsx';\n\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\n\nimport styles from './Order.module.scss';\n\nconst Component = ({cakes, cupcakes}) => (\n  <div className={clsx(styles.root)}>\n    <h3>Cakes</h3>\n    {cakes.map(cake => (\n      <p key={cake._id}>{cake.title + ' $' + cake.price}</p>\n    ))}\n    <h3>Cupcakes</h3>\n    {cupcakes.map(cupcake => (\n      <p key={cupcake._id}>{cupcake.title + ' $' + cupcake.price}</p>\n    ))}\n  </div>\n);\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst Container = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as Order,\n  Container as Order,\n  Component as OrderComponent,\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// import axios from 'axios';\n\n/* selectors */\nexport const getCart = ({\n  cart\n}) => cart.orders;\n/* action name creator */\n\nconst reducerName = 'cart';\n\nconst createActionName = name => \"app/\".concat(reducerName, \"/\").concat(name);\n/* action types */\n\n\nconst START_REQUEST = createActionName('START_REQUEST');\nconst END_REQUEST = createActionName('END_REQUEST');\nconst ERROR_REQUEST = createActionName('ERROR_REQUEST');\nconst ADD_TO_CART = createActionName('ADD_TO_CART');\nconst REMOVE_ONE = createActionName('REMOVE_ONE');\nconst REMOVE_CART = createActionName('REMOVE_CART');\nconst GET_CART_LOC_STOR = createActionName('GET_CART_LOC_STOR');\n/* action creators */\n\nexport const startRequest = () => ({\n  type: START_REQUEST\n});\nexport const endRequest = () => ({\n  type: END_REQUEST\n});\nexport const errorRequest = error => ({\n  error,\n  type: ERROR_REQUEST\n});\nexport const addToCart = payload => ({\n  payload,\n  type: ADD_TO_CART\n});\nexport const removeOneFromCart = payload => ({\n  payload,\n  type: REMOVE_ONE\n});\nexport const removeCart = () => ({\n  type: REMOVE_CART\n});\nexport const getCartLocStor = () => ({\n  type: GET_CART_LOC_STOR\n});\n/* thunk creators */\n\nexport const loadCartRequest = () => {\n  return async dispatch => {\n    dispatch(startRequest());\n\n    try {\n      let cart = await JSON.parse(localStorage.getItem('cart'));\n      dispatch(getCartLocStor(cart));\n      dispatch(endRequest());\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n  };\n};\n/* reducer */\n\nexport const reducer = (statePart = [], action = {}) => {\n  console.log('statePart', statePart);\n  const orders = [...statePart];\n\n  switch (action.type) {\n    case START_REQUEST:\n      return {\n        orders,\n        request: {\n          pending: true,\n          error: null,\n          success: false\n        }\n      };\n\n    case END_REQUEST:\n      return {\n        orders,\n        request: {\n          pending: false,\n          error: null,\n          success: true\n        }\n      };\n\n    case ERROR_REQUEST:\n      return {\n        orders,\n        request: {\n          pending: false,\n          error: action.error,\n          success: false\n        }\n      };\n\n    case ADD_TO_CART:\n      {\n        const cart = [...statePart];\n        cart.push(action.payload);\n        return cart;\n      }\n\n    case REMOVE_ONE:\n      {\n        const product = statePart.find(product => product.id === action.payload);\n        const index = statePart.indexOf(product);\n        statePart.splice(index, 1);\n        return statePart.length === 0 ? [] : [...statePart];\n      }\n\n    case REMOVE_CART:\n      {\n        const cart = [];\n        return cart;\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/redux/cartRedux.js"],"names":["getCart","cart","orders","reducerName","createActionName","name","START_REQUEST","END_REQUEST","ERROR_REQUEST","ADD_TO_CART","REMOVE_ONE","REMOVE_CART","GET_CART_LOC_STOR","startRequest","type","endRequest","errorRequest","error","addToCart","payload","removeOneFromCart","removeCart","getCartLocStor","loadCartRequest","dispatch","JSON","parse","localStorage","getItem","e","message","reducer","statePart","action","console","log","request","pending","success","push","product","find","id","index","indexOf","splice","length"],"mappings":"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","sourcesContent":["// import axios from 'axios';\n\n/* selectors */\nexport const getCart = ({cart}) => cart.orders;\n\n/* action name creator */\nconst reducerName = 'cart';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst START_REQUEST = createActionName('START_REQUEST');\nconst END_REQUEST = createActionName('END_REQUEST');\nconst ERROR_REQUEST = createActionName('ERROR_REQUEST');\nconst ADD_TO_CART = createActionName('ADD_TO_CART');\nconst REMOVE_ONE = createActionName('REMOVE_ONE');\nconst REMOVE_CART = createActionName('REMOVE_CART');\nconst GET_CART_LOC_STOR = createActionName('GET_CART_LOC_STOR');\n\n/* action creators */\nexport const startRequest = () => ({ type: START_REQUEST });\nexport const endRequest = () => ({ type: END_REQUEST });\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\nexport const addToCart = payload => ({payload, type: ADD_TO_CART});\nexport const removeOneFromCart = payload => ({payload, type: REMOVE_ONE});\nexport const removeCart = () => ({type: REMOVE_CART});\nexport const getCartLocStor = () => ({type: GET_CART_LOC_STOR});\n\n/* thunk creators */\n\nexport const loadCartRequest = () => {\n  return async dispatch => {\n    dispatch(startRequest());\n    try {\n      let cart = await JSON.parse(localStorage.getItem('cart'));\n\n      dispatch(getCartLocStor(cart));\n      dispatch(endRequest());\n\n    } catch(e) {\n      dispatch(errorRequest(e.message));\n    }\n  };\n};\n\n/* reducer */\nexport const reducer = (statePart = [], action = {}) => {\n  console.log('statePart', statePart);\n  const orders = [...statePart];\n  switch (action.type) {\n    case START_REQUEST:\n      return { orders, request: { pending: true, error: null, success: false } };\n    case END_REQUEST:\n      return { orders, request: { pending: false, error: null, success: true } };\n    case ERROR_REQUEST:\n      return { orders, request: { pending: false, error: action.error, success: false } };\n    case ADD_TO_CART: {\n      const cart = [...statePart];\n      cart.push(action.payload);\n      return cart;\n    } case REMOVE_ONE: {\n      const product = statePart.find(product => product.id === action.payload);\n      const index = statePart.indexOf(product);\n      statePart.splice(index, 1);\n      return statePart.length === 0 ? [] : [...statePart];\n    } case REMOVE_CART: {\n      const cart = [];\n      return cart;\n    }\n    default:\n      return statePart;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
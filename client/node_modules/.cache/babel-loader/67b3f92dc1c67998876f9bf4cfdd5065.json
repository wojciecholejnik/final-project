{"ast":null,"code":"var _jsxFileName = \"/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Product/Product.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\nimport styles from './Product.module.scss';\n\nclass Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getOne = (id, type) => {\n      if (type === 'cake') {\n        return this.props.cakes.find(product => product._id === id);\n      } else {\n        return this.props.cupcakes.find(product => product._id === id);\n      }\n    };\n  }\n\n  render() {\n    const matchType = this.props.match.params.id.split('-')[0];\n    const matchId = this.props.match.params.id.split('-')[1];\n    const product = this.getOne(matchId, matchType);\n    return React.createElement(\"div\", {\n      className: clsx(styles.root),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      alignContent: \"center\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      alignContent: \"center\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: styles.img,\n      alt: product.title,\n      src: matchType === 'cake' ? require('../../../images/products/cakes/' + product.img) : require('../../../images/products/cupcakes/' + product.img),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.innerContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, product.title), React.createElement(\"div\", {\n      className: styles.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"$\", product.price)), React.createElement(Button, {\n      className: styles.button,\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      startIcon: React.createElement(AddShoppingCartIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Add to cart\")))));\n  }\n\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n  match: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state)\n}); // const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n\nconst Container = connect(mapStateToProps)(Component);\nexport { // Component as Product,\nContainer as Product, Component as ProductComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Product/Product.js"],"names":["React","PropTypes","Grid","Button","AddShoppingCartIcon","clsx","connect","getCakes","getCupcakes","styles","Component","getOne","id","type","props","cakes","find","product","_id","cupcakes","render","matchType","match","params","split","matchId","root","img","title","require","container","innerContainer","price","button","propTypes","array","object","mapStateToProps","state","Container","Product","ProductComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\n\nimport clsx from 'clsx';\n\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\n\nimport styles from './Product.module.scss';\n\nclass Component extends React.Component {\n\n  getOne = (id, type) => {\n    if(type === 'cake'){\n      return this.props.cakes.find(product => product._id === id);\n    } else {\n      return this.props.cupcakes.find(product => product._id === id);\n    }\n  };\n\n  render(){\n    const matchType = this.props.match.params.id.split('-')[0];\n    const matchId = this.props.match.params.id.split('-')[1];\n    const product = this.getOne(matchId, matchType);\n\n    return (\n      <div className={clsx(styles.root)}>\n        <Grid container spacing={2} alignContent=\"center\" justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12} alignContent=\"center\" justify=\"center\" alignItems=\"center\">\n            <img className={styles.img} alt={product.title} src={matchType === 'cake' ? require('../../../images/products/cakes/' + product.img) : require('../../../images/products/cupcakes/' + product.img)}></img>\n          </Grid>\n          <Grid item xs={12} >\n            <div className={styles.container}>\n              <div className={styles.innerContainer}>\n                <div className={styles.title}>{product.title}</div>\n                <div className={styles.price}>${product.price}</div>\n              </div>\n              <Button\n                className={styles.button}\n                variant='contained'\n                color='primary'\n                size='large'\n                startIcon={<AddShoppingCartIcon></AddShoppingCartIcon>}\n              >\n                Add to cart\n              </Button>\n            </div>\n          </Grid>\n        </Grid>\n\n      </div>\n    );\n  }\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n  match: PropTypes.object,\n};\n\n\n\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst Container = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as Product,\n  Container as Product,\n  Component as ProductComponent,\n};\n"]},"metadata":{},"sourceType":"module"}
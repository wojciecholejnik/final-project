{"ast":null,"code":"var _jsxFileName = \"/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Product/Product.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport { TextField } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\nimport { addToCart } from '../../../redux/cartRedux';\nimport styles from './Product.module.scss';\n\nconst shortid = require('shortid');\n\nclass Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: shortid.generate(),\n      type: '',\n      title: '',\n      img: '',\n      price: '',\n      amount: 1,\n      wishes: '',\n      totalCost: null\n    };\n\n    this.setToCart = product => {\n      if (JSON.parse(localStorage.getItem('cart')).products) {\n        const cart = JSON.parse(localStorage.getItem('cart')).products;\n      } else {\n        const cart = [];\n      }\n\n      cart.push(product);\n      localStorage.setItem('cart', JSON.stringify(product));\n    };\n\n    this.getOne = (id, type) => {\n      if (type === 'cake') {\n        return this.props.cakes.find(product => product._id === id);\n      } else {\n        return this.props.cupcakes.find(product => product._id === id);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const product = this.getOne(this.props.match.params.id.split('-')[1], this.props.match.params.id.split('-')[0]);\n    this.setState({\n      type: this.props.match.params.id.split('-')[0],\n      title: product.title,\n      img: product.img,\n      price: product.price,\n      totalCost: product.price * this.state.amount\n    });\n  }\n\n  render() {\n    const matchType = this.props.match.params.id.split('-')[0];\n    const matchId = this.props.match.params.id.split('-')[1];\n    const product = this.getOne(matchId, matchType);\n    const amountItems = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    return React.createElement(\"div\", {\n      className: clsx(styles.root),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: styles.img,\n      alt: product.title,\n      src: matchType === 'cake' ? require('../../../images/products/cakes/' + product.img) : require('../../../images/products/cupcakes/' + product.img),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.innerContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, product.title), React.createElement(\"div\", {\n      className: styles.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"$\", this.state.totalCost)), React.createElement(\"div\", {\n      className: styles.optionContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onChange: event => {\n        this.setState({\n          wishes: event.target.value\n        });\n      },\n      className: styles.textField,\n      label: \"Your wishes:\",\n      multiline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.amount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-simple-select-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Amount\"), React.createElement(Select, {\n      labelId: \"demo-simple-select-label\",\n      id: \"demo-simple-select\",\n      defaultValue: 1,\n      onChange: event => {\n        this.setState({\n          amount: event.target.value,\n          totalCost: this.state.price * event.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, amountItems.map(item => React.createElement(MenuItem, {\n      key: item,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, item))))), React.createElement(Button, {\n      className: styles.button,\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      startIcon: React.createElement(AddShoppingCartIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }),\n      onClick: () => {\n        this.props.addToCart(this.state);\n        localStorage.setItem('cart', JSON.stringify(this.state));\n      },\n      component: NavLink,\n      to: \"/cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Add to cart\")))));\n  }\n\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n  match: PropTypes.object,\n  addToCart: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addToCart: product => dispatch(addToCart(product))\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\nexport { // Component as Product,\nContainer as Product, Component as ProductComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Product/Product.js"],"names":["React","PropTypes","NavLink","InputLabel","MenuItem","Select","Grid","Button","AddShoppingCartIcon","TextField","clsx","connect","getCakes","getCupcakes","addToCart","styles","shortid","require","Component","state","id","generate","type","title","img","price","amount","wishes","totalCost","setToCart","product","JSON","parse","localStorage","getItem","products","cart","push","setItem","stringify","getOne","props","cakes","find","_id","cupcakes","componentDidMount","match","params","split","setState","render","matchType","matchId","amountItems","root","container","innerContainer","optionContainer","event","target","value","textField","map","item","button","propTypes","array","object","func","mapStateToProps","mapDispatchToProps","dispatch","Container","Product","ProductComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport { TextField } from '@material-ui/core';\n\nimport clsx from 'clsx';\n\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\nimport { addToCart } from '../../../redux/cartRedux';\n\n\nimport styles from './Product.module.scss';\n\nconst shortid = require('shortid');\n\nclass Component extends React.Component {\n\n  state = {\n    id: shortid.generate(),\n    type: '',\n    title: '',\n    img: '',\n    price: '',\n    amount: 1,\n    wishes: '',\n    totalCost: null,\n  };\n\n  setToCart = (product) => {\n    if(JSON.parse(localStorage.getItem('cart')).products){\n      const cart = JSON.parse(localStorage.getItem('cart')).products;\n    } else {\n      const cart = []\n    }\n\n    cart.push(product)\n    localStorage.setItem('cart', JSON.stringify(product));\n\n  }\n\n  componentDidMount(){\n    const product = this.getOne(this.props.match.params.id.split('-')[1], this.props.match.params.id.split('-')[0]);\n    this.setState({\n      type: this.props.match.params.id.split('-')[0],\n      title: product.title,\n      img: product.img,\n      price: product.price,\n      totalCost: product.price * this.state.amount,\n    });\n  }\n\n  getOne = (id, type) => {\n    if(type === 'cake'){\n      return this.props.cakes.find(product => product._id === id);\n    } else {\n      return this.props.cupcakes.find(product => product._id === id);\n    }\n  };\n\n  render(){\n    const matchType = this.props.match.params.id.split('-')[0];\n    const matchId = this.props.match.params.id.split('-')[1];\n    const product = this.getOne(matchId, matchType);\n    const amountItems = [1,2,3,4,5,6,7,8,9,10];\n\n    return (\n      <div className={clsx(styles.root)}>\n        <Grid container spacing={2} >\n          <Grid item xs={12} >\n            <img className={styles.img} alt={product.title} src={matchType === 'cake' ? require('../../../images/products/cakes/' + product.img) : require('../../../images/products/cupcakes/' + product.img)}></img>\n          </Grid>\n          <Grid item xs={12} >\n            <div className={styles.container}>\n              <div className={styles.innerContainer}>\n                <div className={styles.title}>{product.title}</div>\n                <div className={styles.price}>${this.state.totalCost}</div>\n              </div>\n              <div className={styles.optionContainer}>\n                <div >\n                  <TextField\n                    onChange={(event) => {\n                      this.setState({wishes: event.target.value});\n                    }}\n                    className={styles.textField}\n                    label='Your wishes:'\n                    multiline\n                  ></TextField>\n                </div>\n                <div className={styles.amount}>\n                  <InputLabel id=\"demo-simple-select-label\">Amount</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    defaultValue={1}\n                    onChange={(event)=>{\n                      this.setState({\n                        amount: event.target.value,\n                        totalCost: this.state.price * event.target.value,\n                      });\n                    }}\n                  >\n                    {amountItems.map(item => (\n                      <MenuItem key={item} value={item}>{item}</MenuItem>\n                    ))}\n                  </Select>\n                </div>\n              </div>\n              <Button\n                className={styles.button}\n                variant='contained'\n                color='primary'\n                size='large'\n                startIcon={<AddShoppingCartIcon></AddShoppingCartIcon>}\n                onClick={() => {\n                  this.props.addToCart(this.state);\n                  localStorage.setItem('cart', JSON.stringify(this.state));\n                }}\n                component={NavLink}\n                to='/cart'\n              >\n                Add to cart\n              </Button>\n            </div>\n          </Grid>\n        </Grid>\n\n      </div>\n    );\n  }\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n  match: PropTypes.object,\n  addToCart: PropTypes.func,\n};\n\n\n\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addToCart: (product) => dispatch(addToCart(product)),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  // Component as Product,\n  Container as Product,\n  Component as ProductComponent,\n};\n"]},"metadata":{},"sourceType":"module"}
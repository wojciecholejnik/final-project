{"ast":null,"code":"var _jsxFileName = \"/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Cart/Cart.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { TextField } from '@material-ui/core';\nimport { Form } from 'reactstrap';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { getCart, addToCart, removeOneFromCart, removeCart } from '../../../redux/cartRedux';\nimport { addOrder } from '../../../redux/ordersRedux';\nimport styles from './Cart.module.scss';\nimport { Typography } from '@material-ui/core';\n\nconst shortid = require('shortid');\n\nclass Cart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      _id: shortid.generate(),\n      name: '',\n      phone: '',\n      email: '',\n      date: '',\n      products: this.props.cart,\n      totalPrice: this.setTotal(this.props.cart)\n    };\n\n    this.submitForm = e => {\n      e.preventDefault(); // if(this.state.products.length > 0 && this.state.name && this.state.email && this.state.phone){\n      //   const order = this.state;\n      //   this.props.addOrder(order);\n      //   this.props.removeCart();\n      // } else {\n      //   window.alert('Check your inputs !!');\n      // }\n    };\n  }\n\n  setTotal(products) {\n    let cost = null;\n    products.map(product => {\n      cost += product.totalCost;\n      return cost;\n    });\n    return cost;\n  }\n\n  componentDidMount() {\n    //set today date to state\n    const today = new Date();\n    this.setState({\n      date: today.getDate() + '.' + (1 + today.getMonth()) + '.' + today.getFullYear()\n    });\n  }\n\n  render() {\n    const cart = this.props.cart;\n\n    if (cart.length === 0) {\n      return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Your cart is empty !\");\n    } else {\n      return React.createElement(\"div\", {\n        className: clsx(styles.root),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Cart:\"), React.createElement(\"div\", {\n        className: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, cart.map(product => React.createElement(ListItem, {\n        key: product.id,\n        button: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(ListItemAvatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        srcSet: product.type === 'cake' ? require('../../../images/products/cakes/' + product.img) : require('../../../images/products/cupcakes/' + product.img),\n        variant: \"square\",\n        className: styles.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: product.title,\n        secondary: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"body1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, 'price: $' + product.price), React.createElement(Typography, {\n          variant: \"body1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, 'amount: x' + product.amount), React.createElement(Typography, {\n          variant: \"body1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, 'total cost: $' + product.totalCost), product.wishes ? React.createElement(Typography, {\n          variant: \"body1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, 'wishes: ' + product.wishes) : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        onClick: () => this.props.removeOneFromCart(product.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        className: styles.totalContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Total cost: $\", this.state.totalPrice)), React.createElement(\"div\", {\n        className: styles.formContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        onChange: event => {\n          this.setState({\n            name: event.target.value\n          });\n        },\n        className: styles.textField,\n        label: \"Type your name:\",\n        required: true,\n        autoComplete: \"off\",\n        fullWidth: true,\n        margin: \"dense\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        onChange: event => {\n          this.setState({\n            email: event.target.value\n          });\n        },\n        className: styles.textField,\n        label: \"Type your email:\",\n        required: true,\n        fullWidth: true,\n        type: \"email\",\n        margin: \"dense\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        onChange: this.submitForm,\n        className: styles.textField,\n        label: \"Type your phone:\",\n        type: \"number\",\n        required: true,\n        fullWidth: true,\n        margin: \"dense\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        onSubmit: this.submitForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }\n\n}\n\nCart.propTypes = {\n  cart: PropTypes.array,\n  removeOneFromCart: PropTypes.func,\n  removeCart: PropTypes.func,\n  addOrder: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  cart: getCart(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addToCart: data => dispatch(addToCart(data)),\n  removeOneFromCart: index => dispatch(removeOneFromCart(index)),\n  removeCart: () => dispatch(removeCart()),\n  addOrder: data => dispatch(addOrder(data))\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Cart);\nexport { // Component as Cart,\nContainer as Cart, Cart as CartComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Cart/Cart.js"],"names":["React","PropTypes","List","ListItem","ListItemAvatar","Avatar","ListItemSecondaryAction","ListItemText","IconButton","DeleteIcon","TextField","Form","clsx","connect","getCart","addToCart","removeOneFromCart","removeCart","addOrder","styles","Typography","shortid","require","Cart","Component","state","_id","generate","name","phone","email","date","products","props","cart","totalPrice","setTotal","submitForm","e","preventDefault","cost","map","product","totalCost","componentDidMount","today","Date","setState","getDate","getMonth","getFullYear","render","length","root","container","id","type","img","avatar","title","price","amount","wishes","totalContainer","formContainer","form","event","target","value","textField","propTypes","array","func","mapStateToProps","mapDispatchToProps","dispatch","data","index","Container","CartComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { TextField } from '@material-ui/core';\nimport { Form } from 'reactstrap';\n\nimport clsx from 'clsx';\n\nimport { connect } from 'react-redux';\nimport { getCart, addToCart, removeOneFromCart, removeCart } from '../../../redux/cartRedux';\nimport { addOrder } from '../../../redux/ordersRedux';\n\nimport styles from './Cart.module.scss';\nimport { Typography } from '@material-ui/core';\nconst shortid = require('shortid');\n\n\nclass Cart extends React.Component {\n  state = {\n    _id: shortid.generate(),\n    name: '',\n    phone: '',\n    email: '',\n    date: '',\n    products: this.props.cart,\n    totalPrice: this.setTotal(this.props.cart),\n  };\n\n\n  setTotal(products){\n    let cost = null;\n    products.map(product => {\n      cost += product.totalCost;\n      return cost;\n    });\n    return cost;\n  }\n\n  submitForm = (e) => {\n    e.preventDefault();\n    // if(this.state.products.length > 0 && this.state.name && this.state.email && this.state.phone){\n    //   const order = this.state;\n    //   this.props.addOrder(order);\n    //   this.props.removeCart();\n    // } else {\n    //   window.alert('Check your inputs !!');\n    // }\n  }\n\n  componentDidMount(){\n    //set today date to state\n    const today = new Date();\n    this.setState({date: today.getDate() + '.' + (1 + today.getMonth()) + '.' + today.getFullYear()});\n  }\n\n  render(){\n    const { cart } = this.props;\n    if(cart.length === 0){\n      return(\n        <h2>Your cart is empty !</h2>\n      );\n    } else {\n      return(\n        <div className={clsx(styles.root)}>\n          <h2>Cart:</h2>\n          <div className={styles.container}>\n            <List>\n              {cart.map(product => (\n                <ListItem key={product.id} button>\n                  <ListItemAvatar>\n                    <Avatar\n                      srcSet={product.type === 'cake' ? require('../../../images/products/cakes/' + product.img) : require('../../../images/products/cupcakes/' + product.img)}\n                      variant='square'\n                      className={styles.avatar}\n                    />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={product.title}\n                    secondary={\n                      <React.Fragment>\n                        <Typography\n                          variant='body1'\n                        >\n                          {'price: $' + product.price}\n                        </Typography>\n                        <Typography\n                          variant='body1'\n                        >\n                          {'amount: x' + product.amount}\n                        </Typography>\n                        <Typography\n                          variant='body1'\n                        >\n                          {'total cost: $' + product.totalCost}\n                        </Typography>\n                        {product.wishes ? (\n                          <Typography\n                            variant='body1'\n                          >\n                            {'wishes: ' + product.wishes}\n                          </Typography>\n                        ) : ''}\n                      </React.Fragment>\n                    }\n                  />\n                  <ListItemSecondaryAction onClick={() => this.props.removeOneFromCart(product.id)}>\n                    <IconButton edge=\"end\" aria-label=\"delete\" >\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n            <div className={styles.totalContainer}>\n              <h2>Total cost: ${this.state.totalPrice}</h2>\n            </div>\n            <div className={styles.formContainer}>\n              <Form className={styles.form}>\n                <TextField\n                  onChange={(event) => {\n                    this.setState({name: event.target.value});\n                  }}\n                  className={styles.textField}\n                  label='Type your name:'\n                  required\n                  autoComplete=\"off\"\n                  fullWidth\n                  margin=\"dense\"\n                ></TextField>\n                <TextField\n                  onChange={(event) => {\n                    this.setState({email: event.target.value});\n                  }}\n                  className={styles.textField}\n                  label='Type your email:'\n                  required\n                  fullWidth\n                  type=\"email\"\n                  margin=\"dense\"\n                ></TextField>\n                <TextField\n                  onChange={this.submitForm}\n                  className={styles.textField}\n                  label='Type your phone:'\n                  type=\"number\"\n                  required\n                  fullWidth\n                  margin=\"dense\"\n                ></TextField>\n\n                <button\n                  type='submit'\n                  onSubmit={this.submitForm}\n                >Submit</button>\n              </Form>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nCart.propTypes = {\n  cart: PropTypes.array,\n  removeOneFromCart: PropTypes.func,\n  removeCart: PropTypes.func,\n  addOrder: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  cart: getCart(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addToCart: data => dispatch(addToCart(data)),\n  removeOneFromCart: index => dispatch(removeOneFromCart(index)),\n  removeCart: () => dispatch(removeCart()),\n  addOrder: (data) => dispatch(addOrder(data)),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Cart);\n\nexport {\n  // Component as Cart,\n  Container as Cart,\n  Cart as CartComponent,\n};\n"]},"metadata":{},"sourceType":"module"}
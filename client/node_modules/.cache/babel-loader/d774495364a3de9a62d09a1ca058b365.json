{"ast":null,"code":"import _defineProperty from \"/Users/wojtas/Desktop/Kodilla/final-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport { API_URL } from '../config';\n/* selectors */\n\nexport const getOrders = ({\n  orders\n}) => orders;\n/* action name creator */\n\nconst reducerName = 'orders';\n\nconst createActionName = name => \"app/\".concat(reducerName, \"/\").concat(name);\n/* action types */\n\n\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst LOAD_ORDERS = createActionName('LOAD_ORDERS');\n/* action creators */\n\nexport const fetchStarted = () => ({\n  type: FETCH_START\n});\nexport const fetchSuccess = () => ({\n  type: FETCH_SUCCESS\n});\nexport const fetchError = payload => ({\n  payload,\n  type: FETCH_ERROR\n});\nexport const loadOrders = payload => ({\n  payload,\n  type: LOAD_ORDERS\n});\n/* thunk creators */\n\nexport const loadOrdersRequest = () => {\n  return async dispatch => {\n    dispatch(fetchStarted());\n\n    try {\n      let orders = await axios.get(\"\".concat(API_URL, \"/orders\"));\n      console.log('ORDERS: ', orders.data);\n      const allOrders = [];\n      allOrders.push(orders);\n      await dispatch(loadOrders(allOrders));\n      await dispatch(fetchSuccess());\n    } catch (e) {\n      dispatch(fetchError(e.message));\n    }\n  };\n};\n/* reducer */\n\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case FETCH_START:\n      {\n        return _objectSpread({}, statePart, {\n          loading: {\n            active: true,\n            error: false\n          }\n        });\n      }\n\n    case FETCH_SUCCESS:\n      {\n        return _objectSpread({}, statePart, {\n          loading: {\n            active: false,\n            error: false\n          },\n          data: action.payload\n        });\n      }\n\n    case FETCH_ERROR:\n      {\n        return _objectSpread({}, statePart, {\n          loading: {\n            active: false,\n            error: action.payload\n          }\n        });\n      }\n\n    case LOAD_ORDERS:\n      {\n        return _objectSpread({}, statePart, {\n          orders: action.payload\n        });\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/client/src/redux/ordersRedux.js"],"names":["axios","API_URL","getOrders","orders","reducerName","createActionName","name","FETCH_START","FETCH_SUCCESS","FETCH_ERROR","LOAD_ORDERS","fetchStarted","type","fetchSuccess","fetchError","payload","loadOrders","loadOrdersRequest","dispatch","get","console","log","data","allOrders","push","e","message","reducer","statePart","action","loading","active","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAcA,MAAhC;AAEP;;AACA,MAAMC,WAAW,GAAG,QAApB;;AACA,MAAMC,gBAAgB,GAAGC,IAAI,kBAAWF,WAAX,cAA0BE,IAA1B,CAA7B;AAEA;;;AACA,MAAMC,WAAW,GAAGF,gBAAgB,CAAC,aAAD,CAApC;AACA,MAAMG,aAAa,GAAGH,gBAAgB,CAAC,eAAD,CAAtC;AACA,MAAMI,WAAW,GAAGJ,gBAAgB,CAAC,aAAD,CAApC;AACA,MAAMK,WAAW,GAAGL,gBAAgB,CAAC,aAAD,CAApC;AAEA;;AACA,OAAO,MAAMM,YAAY,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAEL;AAAR,CAAP,CAArB;AACP,OAAO,MAAMM,YAAY,GAAG,OAAO;AAAED,EAAAA,IAAI,EAAEJ;AAAR,CAAP,CAArB;AACP,OAAO,MAAMM,UAAU,GAAGC,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWH,EAAAA,IAAI,EAAEH;AAAjB,CAAL,CAA1B;AACP,OAAO,MAAMO,UAAU,GAAGD,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWH,EAAAA,IAAI,EAAEF;AAAjB,CAAL,CAA1B;AAEP;;AACA,OAAO,MAAMO,iBAAiB,GAAG,MAAM;AACrC,SAAO,MAAMC,QAAN,IAAkB;AACvBA,IAAAA,QAAQ,CAACP,YAAY,EAAb,CAAR;;AACA,QAAI;AACF,UAAIR,MAAM,GAAG,MAAMH,KAAK,CAACmB,GAAN,WAAalB,OAAb,aAAnB;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBlB,MAAM,CAACmB,IAA/B;AACA,YAAMC,SAAS,GAAG,EAAlB;AACAA,MAAAA,SAAS,CAACC,IAAV,CAAerB,MAAf;AACA,YAAMe,QAAQ,CAACF,UAAU,CAACO,SAAD,CAAX,CAAd;AACA,YAAML,QAAQ,CAACL,YAAY,EAAb,CAAd;AACD,KAPD,CAOE,OAAMY,CAAN,EAAS;AACTP,MAAAA,QAAQ,CAACJ,UAAU,CAACW,CAAC,CAACC,OAAH,CAAX,CAAR;AACD;AACF,GAZD;AAaD,CAdM;AAgBP;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,SAAS,GAAG,EAAb,EAAiBC,MAAM,GAAG,EAA1B,KAAiC;AACtD,UAAQA,MAAM,CAACjB,IAAf;AACE,SAAKL,WAAL;AAAkB;AAChB,iCACKqB,SADL;AAEEE,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,IADD;AAEPC,YAAAA,KAAK,EAAE;AAFA;AAFX;AAOD;;AACD,SAAKxB,aAAL;AAAoB;AAClB,iCACKoB,SADL;AAEEE,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,KADD;AAEPC,YAAAA,KAAK,EAAE;AAFA,WAFX;AAMEV,UAAAA,IAAI,EAAEO,MAAM,CAACd;AANf;AAQD;;AACD,SAAKN,WAAL;AAAkB;AAChB,iCACKmB,SADL;AAEEE,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,KADD;AAEPC,YAAAA,KAAK,EAAEH,MAAM,CAACd;AAFP;AAFX;AAOD;;AACD,SAAKL,WAAL;AAAkB;AAChB,iCACKkB,SADL;AAEEzB,UAAAA,MAAM,EAAE0B,MAAM,CAACd;AAFjB;AAID;;AACD;AACE,aAAOa,SAAP;AApCJ;AAsCD,CAvCM","sourcesContent":["import axios from 'axios';\nimport { API_URL } from '../config';\n\n/* selectors */\nexport const getOrders = ({orders}) => orders;\n\n/* action name creator */\nconst reducerName = 'orders';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst LOAD_ORDERS = createActionName('LOAD_ORDERS');\n\n/* action creators */\nexport const fetchStarted = () => ({ type: FETCH_START });\nexport const fetchSuccess = () => ({ type: FETCH_SUCCESS });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\nexport const loadOrders = payload => ({ payload, type: LOAD_ORDERS });\n\n/* thunk creators */\nexport const loadOrdersRequest = () => {\n  return async dispatch => {\n    dispatch(fetchStarted());\n    try {\n      let orders = await axios.get(`${API_URL}/orders`);\n      console.log('ORDERS: ', orders.data);\n      const allOrders = [];\n      allOrders.push(orders);\n      await dispatch(loadOrders(allOrders));\n      await dispatch(fetchSuccess());\n    } catch(e) {\n      dispatch(fetchError(e.message));\n    }\n  };\n};\n\n/* reducer */\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_SUCCESS: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        data: action.payload,\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    case LOAD_ORDERS: {\n      return {\n        ...statePart,\n        orders: action.payload,\n      };\n    }\n    default:\n      return statePart;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
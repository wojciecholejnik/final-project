{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { initialState } from './initialState';\nimport { reducer as productsReducer } from './productsRedux';\nimport { reducer as cartReducer } from './cartRedux'; // define reducers\n\nconst reducers = {\n  products: productsReducer,\n  cart: cartReducer\n}; // add blank reducers for initial state properties without reducers\n\nObject.keys(initialState).forEach(item => {\n  if (typeof reducers[item] == 'undefined') {\n    reducers[item] = (statePart = null) => statePart;\n  }\n});\nconst combinedReducers = combineReducers(reducers); // create store\n\nexport const store = createStore(combinedReducers, initialState, composeWithDevTools(applyMiddleware(thunk)));","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/redux/store.js"],"names":["combineReducers","createStore","applyMiddleware","thunk","composeWithDevTools","initialState","reducer","productsReducer","cartReducer","reducers","products","cart","Object","keys","forEach","item","statePart","combinedReducers","store"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,WAAzB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,OAAO,IAAIC,eAApB,QAA2C,iBAA3C;AACA,SAASD,OAAO,IAAIE,WAApB,QAAuC,aAAvC,C,CAEA;;AACA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,QAAQ,EAAEH,eADK;AAEfI,EAAAA,IAAI,EAAEH;AAFS,CAAjB,C,CAKA;;AACAI,MAAM,CAACC,IAAP,CAAYR,YAAZ,EAA0BS,OAA1B,CAAkCC,IAAI,IAAI;AACxC,MAAI,OAAON,QAAQ,CAACM,IAAD,CAAf,IAAyB,WAA7B,EAA0C;AACxCN,IAAAA,QAAQ,CAACM,IAAD,CAAR,GAAiB,CAACC,SAAS,GAAG,IAAb,KAAsBA,SAAvC;AACD;AACF,CAJD;AAMA,MAAMC,gBAAgB,GAAGjB,eAAe,CAACS,QAAD,CAAxC,C,CAEA;;AACA,OAAO,MAAMS,KAAK,GAAGjB,WAAW,CAC9BgB,gBAD8B,EAE9BZ,YAF8B,EAG9BD,mBAAmB,CACjBF,eAAe,CAACC,KAAD,CADE,CAHW,CAAzB","sourcesContent":["import {combineReducers, createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { initialState } from './initialState';\nimport { reducer as productsReducer } from './productsRedux';\nimport { reducer as cartReducer } from './cartRedux';\n\n// define reducers\nconst reducers = {\n  products: productsReducer,\n  cart: cartReducer,\n};\n\n// add blank reducers for initial state properties without reducers\nObject.keys(initialState).forEach(item => {\n  if (typeof reducers[item] == 'undefined') {\n    reducers[item] = (statePart = null) => statePart;\n  }\n});\n\nconst combinedReducers = combineReducers(reducers);\n\n// create store\nexport const store = createStore(\n  combinedReducers,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n"]},"metadata":{},"sourceType":"module"}
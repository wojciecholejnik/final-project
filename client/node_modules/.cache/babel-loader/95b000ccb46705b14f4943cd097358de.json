{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport styles from './Order.module.scss';\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes, getProductStats, loadProductsRequest } from '../../../redux/productsRedux';\n\nclass Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      width: Math.max(document.documentElement.clientWidth)\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadProducts();\n    this.changeWidth();\n  }\n\n  changeWidth() {\n    window.addEventListener('resize', () => {\n      this.setState({\n        width: Math.max(document.documentElement.clientWidth)\n      });\n    });\n  } // render(){\n  //   const {cakes, cupcakes} = this.props;\n  //   console.log(this.props.stats);\n  //   if(this.props.stats.active){\n  //     return (<div><CircularProgress/></div>);\n  //   } else if(this.props.stats.error){\n  //     return (<h2>{this.props.stats.error}</h2>);\n  //   } else if(!this.props.stats.active){\n  //     return (\n  //       <div className={styles.root}>\n  //         {/* Cakes horizontal swiper */}\n  //         <div className={styles.swiperDiv}>\n  //           <h2 className={styles.title}>These are our cakes: </h2>\n  //           <GridList spacing={15} className={styles.gridList} cols={this.state.width > 600 ? 2.2 : 1.15} cellHeight={230}>\n  //             {cakes.map((tile) => (\n  //               <GridListTile component={NavLink} to={'/product/cake-' + tile._id} key={tile._id}>\n  //                 <img className={styles.image} src={require('../../../images/products/cakes/' + tile.img)} alt={tile.title} />\n  //                 <GridListTileBar\n  //                   title={tile.title}\n  //                 />\n  //               </GridListTile>\n  //             ))}\n  //           </GridList>\n  //         </div>\n  //         {/* Cupcakes horizontal swiper */}\n  //         <div className={styles.swiperDiv}>\n  //           <h2 className={styles.title}>... and cupcakes: </h2>\n  //           <GridList spacing={15} className={styles.gridList} cols={this.state.width > 600 ? 2.2 : 1.15} cellHeight={230}>\n  //             {cupcakes.map((tile) => (\n  //               <GridListTile component={NavLink} to={'/product/cupcake-' + tile._id } key={tile._id}>\n  //                 <img className={styles.image} src={require('../../../images/products/cupcakes/' + tile.img)} alt={tile.title} />\n  //                 <GridListTileBar\n  //                   className={styles.signature}\n  //                   title={tile.title}\n  //                 />\n  //               </GridListTile>\n  //             ))}\n  //           </GridList>\n  //         </div>\n  //       </div>\n  //     );\n  //   }\n  // }\n\n\n}\n\nComponent.propTypes = {\n  loadProducts: PropTypes.func,\n  stats: PropTypes.object,\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  stats: getProductStats(state),\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadProducts: () => dispatch(loadProductsRequest())\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\nexport { // Component as Order,\nContainer as Order, Component as OrderComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/client/src/components/views/Order/Order.js"],"names":["React","PropTypes","NavLink","GridList","GridListTile","GridListTileBar","CircularProgress","styles","connect","getCakes","getCupcakes","getProductStats","loadProductsRequest","Component","state","width","Math","max","document","documentElement","clientWidth","componentDidMount","props","loadProducts","changeWidth","window","addEventListener","setState","propTypes","func","stats","object","cakes","array","cupcakes","mapStateToProps","mapDispatchToProps","dispatch","Container","Order","OrderComponent"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,eAAhC,EAAiDC,mBAAjD,QAA4E,8BAA5E;;AAGA,MAAMC,SAAN,SAAwBb,KAAK,CAACa,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAOtCC,KAPsC,GAO9B;AACNC,MAAAA,KAAK,EAAEC,IAAI,CAACC,GAAL,CAASC,QAAQ,CAACC,eAAT,CAAyBC,WAAlC;AADD,KAP8B;AAAA;;AAEtCC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWC,YAAX;AACA,SAAKC,WAAL;AACD;;AAMDA,EAAAA,WAAW,GAAE;AACXC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACtC,WAAKC,QAAL,CAAc;AAACZ,QAAAA,KAAK,EAAEC,IAAI,CAACC,GAAL,CAASC,QAAQ,CAACC,eAAT,CAAyBC,WAAlC;AAAR,OAAd;AACD,KAFD;AAGD,GAfqC,CAiBtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA7DsC;;AAgExCP,SAAS,CAACe,SAAV,GAAsB;AACpBL,EAAAA,YAAY,EAAEtB,SAAS,CAAC4B,IADJ;AAEpBC,EAAAA,KAAK,EAAE7B,SAAS,CAAC8B,MAFG;AAGpBC,EAAAA,KAAK,EAAE/B,SAAS,CAACgC,KAHG;AAIpBC,EAAAA,QAAQ,EAAEjC,SAAS,CAACgC;AAJA,CAAtB;;AAOA,MAAME,eAAe,GAAGrB,KAAK,KAAK;AAChCgB,EAAAA,KAAK,EAAEnB,eAAe,CAACG,KAAD,CADU;AAEhCkB,EAAAA,KAAK,EAAEvB,QAAQ,CAACK,KAAD,CAFiB;AAGhCoB,EAAAA,QAAQ,EAAExB,WAAW,CAACI,KAAD;AAHW,CAAL,CAA7B;;AAMA,MAAMsB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCd,EAAAA,YAAY,EAAE,MAAMc,QAAQ,CAACzB,mBAAmB,EAApB;AADU,CAAL,CAAnC;;AAIA,MAAM0B,SAAS,GAAG9B,OAAO,CAAC2B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvB,SAA7C,CAAlB;AAEA,SACE;AACAyB,SAAS,IAAIC,KAFf,EAGE1B,SAAS,IAAI2B,cAHf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport styles from './Order.module.scss';\n\n\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes, getProductStats, loadProductsRequest } from '../../../redux/productsRedux';\n\n\nclass Component extends React.Component {\n\n  componentDidMount(){\n    this.props.loadProducts();\n    this.changeWidth();\n  }\n\n  state = {\n    width: Math.max(document.documentElement.clientWidth),\n  }\n\n  changeWidth(){\n    window.addEventListener('resize', () => {\n      this.setState({width: Math.max(document.documentElement.clientWidth)});\n    });\n  }\n\n  // render(){\n\n  //   const {cakes, cupcakes} = this.props;\n  //   console.log(this.props.stats);\n  //   if(this.props.stats.active){\n  //     return (<div><CircularProgress/></div>);\n  //   } else if(this.props.stats.error){\n  //     return (<h2>{this.props.stats.error}</h2>);\n  //   } else if(!this.props.stats.active){\n  //     return (\n  //       <div className={styles.root}>\n  //         {/* Cakes horizontal swiper */}\n  //         <div className={styles.swiperDiv}>\n  //           <h2 className={styles.title}>These are our cakes: </h2>\n  //           <GridList spacing={15} className={styles.gridList} cols={this.state.width > 600 ? 2.2 : 1.15} cellHeight={230}>\n  //             {cakes.map((tile) => (\n  //               <GridListTile component={NavLink} to={'/product/cake-' + tile._id} key={tile._id}>\n  //                 <img className={styles.image} src={require('../../../images/products/cakes/' + tile.img)} alt={tile.title} />\n  //                 <GridListTileBar\n  //                   title={tile.title}\n  //                 />\n  //               </GridListTile>\n  //             ))}\n  //           </GridList>\n  //         </div>\n\n  //         {/* Cupcakes horizontal swiper */}\n  //         <div className={styles.swiperDiv}>\n  //           <h2 className={styles.title}>... and cupcakes: </h2>\n  //           <GridList spacing={15} className={styles.gridList} cols={this.state.width > 600 ? 2.2 : 1.15} cellHeight={230}>\n  //             {cupcakes.map((tile) => (\n  //               <GridListTile component={NavLink} to={'/product/cupcake-' + tile._id } key={tile._id}>\n  //                 <img className={styles.image} src={require('../../../images/products/cupcakes/' + tile.img)} alt={tile.title} />\n  //                 <GridListTileBar\n  //                   className={styles.signature}\n  //                   title={tile.title}\n  //                 />\n  //               </GridListTile>\n  //             ))}\n  //           </GridList>\n  //         </div>\n  //       </div>\n  //     );\n  //   }\n  // }\n}\n\nComponent.propTypes = {\n  loadProducts: PropTypes.func,\n  stats: PropTypes.object,\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n};\n\nconst mapStateToProps = state => ({\n  stats: getProductStats(state),\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadProducts: () => dispatch(loadProductsRequest()),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  // Component as Order,\n  Container as Order,\n  Component as OrderComponent,\n};\n"]},"metadata":{},"sourceType":"module"}
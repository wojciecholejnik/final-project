{"ast":null,"code":"var _jsxFileName = \"/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Product/Product.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\nimport styles from './Product.module.scss';\nimport { TextField } from '@material-ui/core';\n\nclass Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setTitle = (id, type) => {\n      if (type === 'cake') {\n        const product = this.props.cakes.find(product => product._id === id);\n        return product.title;\n      } else {\n        const product = this.props.cupcakes.find(product => product._id === id);\n        return product.title;\n      }\n    };\n\n    this.setPrice = (id, type) => {\n      if (type === 'cake') {\n        const product = this.props.cakes.find(product => product._id === id);\n        return product.price;\n      } else {\n        const product = this.props.cupcakes.find(product => product._id === id);\n        return product.price;\n      }\n    };\n\n    this.setImg = (id, type) => {\n      if (type === 'cake') {\n        const product = this.props.cakes.find(product => product._id === id);\n        return product.img;\n      } else {\n        const product = this.props.cupcakes.find(product => product._id === id);\n        return product.img;\n      }\n    };\n\n    this.state = {\n      type: this.props.match.params.id.split('-')[0],\n      title: this.setTitle(this.props.match.params.id.split('-')[1], this.props.match.params.id.split('-')[0]),\n      img: this.setImg(this.props.match.params.id.split('-')[1], this.props.match.params.id.split('-')[0]),\n      price: this.setPrice(this.props.match.params.id.split('-')[1], this.props.match.params.id.split('-')[0]),\n      amount: 1,\n      totalCost: null\n    };\n\n    this.getOne = (id, type) => {\n      if (type === 'cake') {\n        return this.props.cakes.find(product => product._id === id);\n      } else {\n        return this.props.cupcakes.find(product => product._id === id);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const product = this.getOne(this.props.match.params.id.split('-')[1], this.props.match.params.id.split('-')[0]);\n    this.setState({\n      type: this.props.match.params.id.split('-')[0],\n      title: product.title,\n      img: product.img,\n      price: product.price,\n      totalCost: this.state.price * this.state.amount\n    });\n  }\n\n  render() {\n    const matchType = this.props.match.params.id.split('-')[0];\n    const matchId = this.props.match.params.id.split('-')[1];\n    const product = this.getOne(matchId, matchType);\n    const amountItems = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    return React.createElement(\"div\", {\n      className: clsx(styles.root),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: styles.img,\n      alt: product.title,\n      src: matchType === 'cake' ? require('../../../images/products/cakes/' + product.img) : require('../../../images/products/cupcakes/' + product.img),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.innerContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, product.title), React.createElement(\"div\", {\n      className: styles.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"$\", product.price)), React.createElement(\"div\", {\n      className: styles.optionContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      className: styles.textField,\n      label: \"Your wishes:\",\n      multiline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.amount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-simple-select-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Amount\"), React.createElement(Select, {\n      labelId: \"demo-simple-select-label\",\n      id: \"demo-simple-select\",\n      defaultValue: 1,\n      onChange: event => {\n        this.setState({\n          amount: event.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, amountItems.map(item => React.createElement(MenuItem, {\n      key: item,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, item))))), React.createElement(Button, {\n      className: styles.button,\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      startIcon: React.createElement(AddShoppingCartIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Add to cart\")))));\n  }\n\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n  match: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state)\n}); // const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n\nconst Container = connect(mapStateToProps)(Component);\nexport { // Component as Product,\nContainer as Product, Component as ProductComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Product/Product.js"],"names":["React","PropTypes","InputLabel","MenuItem","Select","Grid","Button","AddShoppingCartIcon","clsx","connect","getCakes","getCupcakes","styles","TextField","Component","setTitle","id","type","product","props","cakes","find","_id","title","cupcakes","setPrice","price","setImg","img","state","match","params","split","amount","totalCost","getOne","componentDidMount","setState","render","matchType","matchId","amountItems","root","require","container","innerContainer","optionContainer","textField","event","target","value","map","item","button","propTypes","array","object","mapStateToProps","Container","Product","ProductComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\n\nimport clsx from 'clsx';\n\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\n\nimport styles from './Product.module.scss';\nimport { TextField } from '@material-ui/core';\n\nclass Component extends React.Component {\n\n  setTitle = (id, type) => {\n    if(type === 'cake'){\n      const product = this.props.cakes.find(product => product._id === id);\n      return product.title;\n    } else {\n      const product = this.props.cupcakes.find(product => product._id === id);\n      return product.title;\n    }\n  };\n\n  setPrice = (id, type) => {\n    if(type === 'cake'){\n      const product = this.props.cakes.find(product => product._id === id);\n      return product.price;\n    } else {\n      const product = this.props.cupcakes.find(product => product._id === id);\n      return product.price;\n    }\n  };\n\n  setImg = (id, type) => {\n    if(type === 'cake'){\n      const product = this.props.cakes.find(product => product._id === id);\n      return product.img;\n    } else {\n      const product = this.props.cupcakes.find(product => product._id === id);\n      return product.img;\n    }\n  };\n\n\n  state = {\n    type: this.props.match.params.id.split('-')[0],\n    title: this.setTitle(this.props.match.params.id.split('-')[1], this.props.match.params.id.split('-')[0]),\n    img: this.setImg(this.props.match.params.id.split('-')[1], this.props.match.params.id.split('-')[0]),\n    price: this.setPrice(this.props.match.params.id.split('-')[1], this.props.match.params.id.split('-')[0]),\n    amount: 1,\n    totalCost: null,\n  };\n\n  componentDidMount(){\n    const product = this.getOne(this.props.match.params.id.split('-')[1], this.props.match.params.id.split('-')[0]);\n    this.setState({\n      type: this.props.match.params.id.split('-')[0],\n      title: product.title,\n      img: product.img,\n      price: product.price,\n      totalCost: this.state.price * this.state.amount,\n    });\n  }\n\n  getOne = (id, type) => {\n    if(type === 'cake'){\n      return this.props.cakes.find(product => product._id === id);\n    } else {\n      return this.props.cupcakes.find(product => product._id === id);\n    }\n  };\n\n\n\n\n  render(){\n    const matchType = this.props.match.params.id.split('-')[0];\n    const matchId = this.props.match.params.id.split('-')[1];\n    const product = this.getOne(matchId, matchType);\n    const amountItems = [1,2,3,4,5,6,7,8,9,10];\n\n    return (\n      <div className={clsx(styles.root)}>\n        <Grid container spacing={2} >\n          <Grid item xs={12} >\n            <img className={styles.img} alt={product.title} src={matchType === 'cake' ? require('../../../images/products/cakes/' + product.img) : require('../../../images/products/cupcakes/' + product.img)}></img>\n          </Grid>\n          <Grid item xs={12} >\n            <div className={styles.container}>\n              <div className={styles.innerContainer}>\n                <div className={styles.title}>{product.title}</div>\n                <div className={styles.price}>${product.price}</div>\n              </div>\n              <div className={styles.optionContainer}>\n                <div >\n                  <TextField className={styles.textField} label='Your wishes:' multiline></TextField>\n                </div>\n                <div className={styles.amount}>\n                  <InputLabel id=\"demo-simple-select-label\">Amount</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    defaultValue={1}\n                    onChange={(event)=>{this.setState({amount: event.target.value});}}\n                  >\n                    {amountItems.map(item => (\n                      <MenuItem key={item} value={item}>{item}</MenuItem>\n                    ))}\n                  </Select>\n                </div>\n              </div>\n              <Button\n                className={styles.button}\n                variant='contained'\n                color='primary'\n                size='large'\n                startIcon={<AddShoppingCartIcon></AddShoppingCartIcon>}\n              >\n                Add to cart\n              </Button>\n            </div>\n          </Grid>\n        </Grid>\n\n      </div>\n    );\n  }\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n  match: PropTypes.object,\n};\n\n\n\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst Container = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as Product,\n  Container as Product,\n  Component as ProductComponent,\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Order/Order.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport styles from './Order.module.scss';\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\n\nfunction Component({\n  cakes,\n  cupcakes\n}) {\n  return React.createElement(\"div\", {\n    className: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.swiperDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"These are our cakes: \"), React.createElement(GridList, {\n    spacing: 15,\n    className: styles.gridList,\n    cols: Math.max(document.documentElement.clientWidth) > 600 ? 2.2 : 1.2,\n    cellHeight: 230,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, cakes.map(tile => React.createElement(GridListTile, {\n    component: NavLink,\n    to: '/product/' + tile._id,\n    key: tile._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: styles.image,\n    src: require('../../../images/products/cakes/' + tile.img),\n    alt: tile.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(GridListTileBar, {\n    title: tile.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: styles.swiperDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"... and cupcakes: \"), React.createElement(GridList, {\n    spacing: 15,\n    className: styles.gridList,\n    cols: Math.max(document.documentElement.clientWidth) > 600 ? 2.2 : 1.2,\n    cellHeight: 230,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, cupcakes.map(tile => React.createElement(GridListTile, {\n    key: tile._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: styles.image,\n    src: require('../../../images/products/cupcakes/' + tile.img),\n    alt: tile.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(GridListTileBar, {\n    className: styles.signature,\n    title: tile.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))))));\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state)\n}); // const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n\nconst Container = connect(mapStateToProps)(Component);\nexport { // Component as Order,\nContainer as Order, Component as OrderComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Order/Order.js"],"names":["React","PropTypes","NavLink","GridList","GridListTile","GridListTileBar","styles","connect","getCakes","getCupcakes","Component","cakes","cupcakes","root","swiperDiv","title","gridList","Math","max","document","documentElement","clientWidth","map","tile","_id","image","require","img","signature","propTypes","array","mapStateToProps","state","Container","Order","OrderComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\nimport styles from './Order.module.scss';\n\n\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\n\n\nfunction Component ({cakes, cupcakes}) {\n\n  return (\n    <div className={styles.root}>\n\n      {/* Cakes horizontal swiper */}\n      <div className={styles.swiperDiv}>\n        <h2 className={styles.title}>These are our cakes: </h2>\n        <GridList spacing={15} className={styles.gridList} cols={Math.max(document.documentElement.clientWidth) > 600 ? 2.2 : 1.2} cellHeight={230}>\n          {cakes.map((tile) => (\n            <GridListTile component={NavLink} to={'/product/' + tile._id}key={tile._id}>\n              <img className={styles.image} src={require('../../../images/products/cakes/' + tile.img)} alt={tile.title} />\n              <GridListTileBar\n                title={tile.title}\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n\n      {/* Cupcakes horizontal swiper */}\n      <div className={styles.swiperDiv}>\n        <h2 className={styles.title}>... and cupcakes: </h2>\n        <GridList spacing={15} className={styles.gridList} cols={Math.max(document.documentElement.clientWidth) > 600 ? 2.2 : 1.2} cellHeight={230}>\n          {cupcakes.map((tile) => (\n            <GridListTile key={tile._id}>\n              <img className={styles.image} src={require('../../../images/products/cupcakes/' + tile.img)} alt={tile.title} />\n              <GridListTileBar\n                className={styles.signature}\n                title={tile.title}\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n    </div>\n  );\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst Container = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as Order,\n  Container as Order,\n  Component as OrderComponent,\n};\n"]},"metadata":{},"sourceType":"module"}
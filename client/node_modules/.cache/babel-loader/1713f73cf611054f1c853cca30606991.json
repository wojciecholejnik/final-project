{"ast":null,"code":"var _jsxFileName = \"/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Cart/Cart.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { getCart, addToCart, removeOneFromCart, removeCart } from '../../../redux/cartRedux';\nimport styles from './Cart.module.scss';\nimport { Typography } from '@material-ui/core';\n\nclass Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      phone: '',\n      date: this.setDate()\n    };\n\n    this.setDate = () => {\n      const today = new Date();\n      return today.getDate() + '.' + (1 + today.getMonth()) + '.' + today.getFullYear();\n    };\n  }\n\n  render() {\n    const cart = this.props.cart;\n\n    if (cart.length <= 0) {\n      return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Your cart is empty !\");\n    } else {\n      return React.createElement(\"div\", {\n        className: clsx(styles.root),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Cart:\"), React.createElement(\"div\", {\n        className: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, cart.map(product => React.createElement(ListItem, {\n        key: product._id,\n        button: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(ListItemAvatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        srcSet: product.type === 'cake' ? require('../../../images/products/cakes/' + product.img) : require('../../../images/products/cupcakes/' + product.img),\n        variant: \"square\",\n        className: styles.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: product.title,\n        secondary: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"subtitle2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, 'price: $' + product.price), React.createElement(Typography, {\n          variant: \"subtitle2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, 'amount: x' + product.amount), React.createElement(Typography, {\n          variant: \"subtitle2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, 'total cost: $' + product.totalCost), product.wishes ? React.createElement(Typography, {\n          variant: \"subtitle2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, 'wishes: ' + product.wishes) : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        onClick: () => this.props.removeOneFromCart(product.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))))))));\n    }\n  }\n\n}\n\nComponent.propTypes = {\n  cart: PropTypes.array,\n  removeOneFromCart: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  cart: getCart(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addToCart: data => dispatch(addToCart(data)),\n  removeOneFromCart: index => dispatch(removeOneFromCart(index)),\n  removeCart: () => dispatch(removeCart())\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\nexport { // Component as Cart,\nContainer as Cart, Component as CartComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Cart/Cart.js"],"names":["React","PropTypes","List","ListItem","ListItemAvatar","Avatar","ListItemSecondaryAction","ListItemText","IconButton","DeleteIcon","clsx","connect","getCart","addToCart","removeOneFromCart","removeCart","styles","Typography","Component","state","email","phone","date","setDate","today","Date","getDate","getMonth","getFullYear","render","cart","props","length","root","container","map","product","_id","type","require","img","avatar","title","price","amount","totalCost","wishes","id","propTypes","array","func","mapStateToProps","mapDispatchToProps","dispatch","data","index","Container","Cart","CartComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport clsx from 'clsx';\n\nimport { connect } from 'react-redux';\nimport { getCart, addToCart, removeOneFromCart, removeCart } from '../../../redux/cartRedux';\n\nimport styles from './Cart.module.scss';\nimport { Typography } from '@material-ui/core';\n\nclass Component extends React.Component {\n  state = {\n    email: '',\n    phone: '',\n    date: this.setDate(),\n  };\n\n  setDate = () => {\n    const today = new Date();\n    return today.getDate() + '.' + (1 + today.getMonth()) + '.' + today.getFullYear();\n  };\n\n  render(){\n    const { cart } = this.props;\n    if(cart.length <= 0){\n      return(\n        <h2>Your cart is empty !</h2>\n      );\n    } else {\n      return(\n        <div className={clsx(styles.root)}>\n          <h2>Cart:</h2>\n          <div className={styles.container}>\n            <List>\n              {cart.map(product => (\n                <ListItem key={product._id} button>\n                  <ListItemAvatar>\n                    <Avatar\n                      srcSet={product.type === 'cake' ? require('../../../images/products/cakes/' + product.img) : require('../../../images/products/cupcakes/' + product.img)}\n                      variant='square'\n                      className={styles.avatar}\n                    />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={product.title}\n                    secondary={\n                      <React.Fragment>\n                        <Typography\n                          variant='subtitle2'\n                        >\n                          {'price: $' + product.price}\n                        </Typography>\n                        <Typography\n                          variant='subtitle2'\n                        >\n                          {'amount: x' + product.amount}\n                        </Typography>\n                        <Typography\n                          variant='subtitle2'\n                        >\n                          {'total cost: $' + product.totalCost}\n                        </Typography>\n                        {product.wishes ? (\n                          <Typography\n                            variant='subtitle2'\n                          >\n                            {'wishes: ' + product.wishes}\n                          </Typography>\n                        ) : ''}\n                      </React.Fragment>\n                    }\n                  />\n                  <ListItemSecondaryAction onClick={() => this.props.removeOneFromCart(product.id)}>\n                    <IconButton edge=\"end\" aria-label=\"delete\" >\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nComponent.propTypes = {\n  cart: PropTypes.array,\n  removeOneFromCart: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  cart: getCart(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addToCart: data => dispatch(addToCart(data)),\n  removeOneFromCart: index => dispatch(removeOneFromCart(index)),\n  removeCart: () => dispatch(removeCart()),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  // Component as Cart,\n  Container as Cart,\n  Component as CartComponent,\n};\n"]},"metadata":{},"sourceType":"module"}
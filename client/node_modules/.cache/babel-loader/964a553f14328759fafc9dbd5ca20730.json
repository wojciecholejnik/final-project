{"ast":null,"code":"import _defineProperty from \"/Users/wojtas/Desktop/Kodilla/final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* selectors */\n\n/* action name creator */\nconst reducerName = 'orders';\n\nconst createActionName = name => \"app/\".concat(reducerName, \"/\").concat(name);\n/* action types */\n\n\nconst ADD_ORDER = createActionName('ADD_ORDER');\n/* action creators */\n\nexport const addOrder = payload => ({\n  payload,\n  type: ADD_ORDER\n});\n/* thunk creators */\n\n/* reducer */\n\nexport const reducer = (statePart = {}, action = {}) => {\n  switch (action.type) {\n    case ADD_ORDER:\n      {\n        const newOrder = action.payload;\n        return _objectSpread({}, statePart, {\n          newOrder\n        });\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/redux/ordersRedux.js"],"names":["reducerName","createActionName","name","ADD_ORDER","addOrder","payload","type","reducer","statePart","action","newOrder"],"mappings":";;;;;;AAAA;;AAEA;AACA,MAAMA,WAAW,GAAG,QAApB;;AACA,MAAMC,gBAAgB,GAAGC,IAAI,kBAAWF,WAAX,cAA0BE,IAA1B,CAA7B;AAEA;;;AACA,MAAMC,SAAS,GAAGF,gBAAgB,CAAC,WAAD,CAAlC;AAEA;;AACA,OAAO,MAAMG,QAAQ,GAAGC,OAAO,KAAK;AAACA,EAAAA,OAAD;AAAUC,EAAAA,IAAI,EAAEH;AAAhB,CAAL,CAAxB;AAEP;;AAEA;;AACA,OAAO,MAAMI,OAAO,GAAG,CAACC,SAAS,GAAG,EAAb,EAAiBC,MAAM,GAAG,EAA1B,KAAiC;AACtD,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKH,SAAL;AAAgB;AACd,cAAMO,QAAQ,GAAGD,MAAM,CAACJ,OAAxB;AACA,iCACKG,SADL;AAEEE,UAAAA;AAFF;AAID;;AACD;AACE,aAAOF,SAAP;AATJ;AAWD,CAZM","sourcesContent":["/* selectors */\n\n/* action name creator */\nconst reducerName = 'orders';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst ADD_ORDER = createActionName('ADD_ORDER');\n\n/* action creators */\nexport const addOrder = payload => ({payload, type: ADD_ORDER});\n\n/* thunk creators */\n\n/* reducer */\nexport const reducer = (statePart = {}, action = {}) => {\n  switch (action.type) {\n    case ADD_ORDER: {\n      const newOrder = action.payload;\n      return {\n        ...statePart,\n        newOrder,\n      };\n    }\n    default:\n      return statePart;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Product/Product.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\nimport styles from './Product.module.scss';\nimport { TextField } from '@material-ui/core';\n\nclass Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      type: '',\n      title: '',\n      img: '',\n      price: '',\n      amount: 1,\n      totalCost: null\n    };\n\n    this.getOne = (id, type) => {\n      if (type === 'cake') {\n        return this.props.cakes.find(product => product._id === id);\n      } else {\n        return this.props.cupcakes.find(product => product._id === id);\n      }\n    };\n  }\n\n  render() {\n    const matchType = this.props.match.params.id.split('-')[0];\n    const matchId = this.props.match.params.id.split('-')[1];\n    const product = this.getOne(matchId, matchType);\n    const amountItems = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    return React.createElement(\"div\", {\n      className: clsx(styles.root),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: styles.img,\n      alt: product.title,\n      src: matchType === 'cake' ? require('../../../images/products/cakes/' + product.img) : require('../../../images/products/cupcakes/' + product.img),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.innerContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, product.title), React.createElement(\"div\", {\n      className: styles.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"$\", product.price)), React.createElement(\"div\", {\n      className: styles.optionContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.textField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.amount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-simple-select-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Amount\"), React.createElement(Select, {\n      labelId: \"demo-simple-select-label\",\n      id: \"demo-simple-select\",\n      defaultValue: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, amountItems.map(item => React.createElement(MenuItem, {\n      key: item,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, item))))), React.createElement(Button, {\n      className: styles.button,\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      startIcon: React.createElement(AddShoppingCartIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Add to cart\")))));\n  }\n\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n  match: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state)\n}); // const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n\nconst Container = connect(mapStateToProps)(Component);\nexport { // Component as Product,\nContainer as Product, Component as ProductComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Product/Product.js"],"names":["React","PropTypes","InputLabel","MenuItem","Select","Grid","Button","AddShoppingCartIcon","clsx","connect","getCakes","getCupcakes","styles","TextField","Component","state","type","title","img","price","amount","totalCost","getOne","id","props","cakes","find","product","_id","cupcakes","render","matchType","match","params","split","matchId","amountItems","root","require","container","innerContainer","optionContainer","textField","map","item","button","propTypes","array","object","mapStateToProps","Container","Product","ProductComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\n\nimport clsx from 'clsx';\n\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\n\nimport styles from './Product.module.scss';\nimport { TextField } from '@material-ui/core';\n\nclass Component extends React.Component {\n\n  state = {\n    type: '',\n    title: '',\n    img: '',\n    price: '',\n    amount: 1,\n    totalCost: null,\n  };\n\n  getOne = (id, type) => {\n    if(type === 'cake'){\n      return this.props.cakes.find(product => product._id === id);\n    } else {\n      return this.props.cupcakes.find(product => product._id === id);\n    }\n  };\n\n  render(){\n    const matchType = this.props.match.params.id.split('-')[0];\n    const matchId = this.props.match.params.id.split('-')[1];\n    const product = this.getOne(matchId, matchType);\n    const amountItems = [1,2,3,4,5,6,7,8,9,10];\n\n    return (\n      <div className={clsx(styles.root)}>\n        <Grid container spacing={2} >\n          <Grid item xs={12} >\n            <img className={styles.img} alt={product.title} src={matchType === 'cake' ? require('../../../images/products/cakes/' + product.img) : require('../../../images/products/cupcakes/' + product.img)}></img>\n          </Grid>\n          <Grid item xs={12} >\n            <div className={styles.container}>\n              <div className={styles.innerContainer}>\n                <div className={styles.title}>{product.title}</div>\n                <div className={styles.price}>${product.price}</div>\n              </div>\n              <div className={styles.optionContainer}>\n                <div className={styles.textField}>\n                  <TextField></TextField>\n                </div>\n                <div className={styles.amount}>\n                  <InputLabel id=\"demo-simple-select-label\">Amount</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    defaultValue={1}\n                  >\n                    {amountItems.map(item => (\n                      <MenuItem key={item} value={item}>{item}</MenuItem>\n                    ))}\n                  </Select>\n                </div>\n              </div>\n              <Button\n                className={styles.button}\n                variant='contained'\n                color='primary'\n                size='large'\n                startIcon={<AddShoppingCartIcon></AddShoppingCartIcon>}\n              >\n                Add to cart\n              </Button>\n            </div>\n          </Grid>\n        </Grid>\n\n      </div>\n    );\n  }\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n  match: PropTypes.object,\n};\n\n\n\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst Container = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as Product,\n  Container as Product,\n  Component as ProductComponent,\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Order/Order.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar'; // import clsx from 'clsx';\n\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux'; // import styles from './Order.module.scss';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden'\n  },\n  gridList: {\n    flexWrap: 'nowrap'\n  }\n}));\nconst classes = useStyles();\n\nconst Component = ({\n  cakes,\n  cupcakes\n}) => // <div className={clsx(styles.root)}>\n//   <h3>Cakes</h3>\n//   {cakes.map(cake => (\n//     <p key={cake._id}>{cake.title + ' $' + cake.price}</p>\n//   ))}\n//   <h3>Cupcakes</h3>\n//   {cupcakes.map(cupcake => (\n//     <p key={cupcake._id}>{cupcake.title + ' $' + cupcake.price}</p>\n//   ))}\n// </div>\nReact.createElement(\"div\", {\n  className: classes.root,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(GridList, {\n  className: classes.gridList,\n  cols: 2.5,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, cakes.map(tile => React.createElement(GridListTile, {\n  key: tile._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: tile.img,\n  alt: tile.title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}), React.createElement(GridListTileBar, {\n  title: tile.title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}))), cakes.map(cake => React.createElement(\"p\", {\n  key: cake._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, cake.title))));\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state)\n}); // const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n\nconst Container = connect(mapStateToProps)(Component);\nexport { // Component as Order,\nContainer as Order, Component as OrderComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Order/Order.js"],"names":["React","PropTypes","makeStyles","GridList","GridListTile","GridListTileBar","connect","getCakes","getCupcakes","useStyles","theme","root","display","flexWrap","justifyContent","overflow","gridList","classes","Component","cakes","cupcakes","map","tile","_id","img","title","cake","propTypes","array","mapStateToProps","state","Container","Order","OrderComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B,C,CAEA;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,8BAAtC,C,CAEA;;AACA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,cAAc,EAAE,cAHZ;AAIJC,IAAAA,QAAQ,EAAE;AAJN,GADiC;AAOvCC,EAAAA,QAAQ,EAAE;AACRH,IAAAA,QAAQ,EAAE;AADF;AAP6B,CAAZ,CAAD,CAA5B;AAWA,MAAMI,OAAO,GAAGR,SAAS,EAAzB;;AAEA,MAAMS,SAAS,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAK,EAAA,SAAS,EAAEH,OAAO,CAACN,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,QAAD;AAAU,EAAA,SAAS,EAAEM,OAAO,CAACD,QAA7B;AAAuC,EAAA,IAAI,EAAE,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGG,KAAK,CAACE,GAAN,CAAWC,IAAD,IACT,oBAAC,YAAD;AAAc,EAAA,GAAG,EAAEA,IAAI,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,GAAG,EAAED,IAAI,CAACE,GAAf;AAAoB,EAAA,GAAG,EAAEF,IAAI,CAACG,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,oBAAC,eAAD;AACE,EAAA,KAAK,EAAEH,IAAI,CAACG,KADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADD,CADH,EASGN,KAAK,CAACE,GAAN,CAAUK,IAAI,IACb;AAAG,EAAA,GAAG,EAAEA,IAAI,CAACH,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAmBG,IAAI,CAACD,KAAxB,CADD,CATH,CADF,CAXF;;AA4BAP,SAAS,CAACS,SAAV,GAAsB;AACpBR,EAAAA,KAAK,EAAElB,SAAS,CAAC2B,KADG;AAEpBR,EAAAA,QAAQ,EAAEnB,SAAS,CAAC2B;AAFA,CAAtB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,KAAK,EAAEZ,QAAQ,CAACuB,KAAD,CADiB;AAEhCV,EAAAA,QAAQ,EAAEZ,WAAW,CAACsB,KAAD;AAFW,CAAL,CAA7B,C,CAKA;AACA;AACA;;;AAEA,MAAMC,SAAS,GAAGzB,OAAO,CAACuB,eAAD,CAAP,CAAyBX,SAAzB,CAAlB;AAEA,SACE;AACAa,SAAS,IAAIC,KAFf,EAGEd,SAAS,IAAIe,cAHf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\n// import clsx from 'clsx';\n\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\n\n// import styles from './Order.module.scss';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n  },\n}));\nconst classes = useStyles();\n\nconst Component = ({cakes, cupcakes}) => (\n  // <div className={clsx(styles.root)}>\n  //   <h3>Cakes</h3>\n  //   {cakes.map(cake => (\n  //     <p key={cake._id}>{cake.title + ' $' + cake.price}</p>\n  //   ))}\n  //   <h3>Cupcakes</h3>\n  //   {cupcakes.map(cupcake => (\n  //     <p key={cupcake._id}>{cupcake.title + ' $' + cupcake.price}</p>\n  //   ))}\n  // </div>\n  <div className={classes.root}>\n    <GridList className={classes.gridList} cols={2.5}>\n      {cakes.map((tile) => (\n        <GridListTile key={tile._id}>\n          <img src={tile.img} alt={tile.title} />\n          <GridListTileBar\n            title={tile.title}\n          />\n        </GridListTile>\n      ))}\n      {cakes.map(cake => (\n        <p key={cake._id}>{cake.title}</p>\n      ))}\n    </GridList>\n  </div>\n);\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst Container = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as Order,\n  Container as Order,\n  Component as OrderComponent,\n};\n"]},"metadata":{},"sourceType":"module"}
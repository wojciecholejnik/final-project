{"ast":null,"code":"// import axios from 'axios';\n\n/* selectors */\nexport const getCart = ({\n  cart\n}) => cart;\n/* action name creator */\n\nconst reducerName = 'cart';\n\nconst createActionName = name => \"app/\".concat(reducerName, \"/\").concat(name);\n/* action types */\n\n\nconst ADD_TO_CART = createActionName('ADD_TO_CART');\nconst REMOVE_ONE = createActionName('REMOVE_ONE');\nconst REMOVE_CART = createActionName('REMOVE_CART');\nconst GET_CART_LOC_STOR = createActionName('GET_CART_LOC_STOR');\n/* action creators */\n\nexport const addToCart = payload => ({\n  payload,\n  type: ADD_TO_CART\n});\nexport const removeOneFromCart = payload => ({\n  payload,\n  type: REMOVE_ONE\n});\nexport const removeCart = () => ({\n  type: REMOVE_CART\n});\nexport const getCartLocStor = payload => ({\n  payload,\n  type: GET_CART_LOC_STOR\n});\n/* thunk creators */\n\nexport const loadCartRequest = () => {\n  return async dispatch => {\n    try {\n      let cart = await JSON.parse(localStorage.getItem('cart'));\n      console.log('HAHAHA cart', cart);\n      dispatch(getCartLocStor(cart));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n/* reducer */\n\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      {\n        const cart = [...statePart];\n        cart.push(action.payload);\n        return cart;\n      }\n\n    case REMOVE_ONE:\n      {\n        const product = statePart.find(product => product.id === action.payload);\n        const index = statePart.indexOf(product);\n        statePart.splice(index, 1);\n        return statePart.length === 0 ? [] : [...statePart];\n      }\n\n    case REMOVE_CART:\n      {\n        const cart = [];\n        return cart;\n      }\n\n    case GET_CART_LOC_STOR:\n      {\n        const cart = [...statePart];\n        console.log('cartYYY: ', cart);\n        cart.push(action.payload);\n        return cart;\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/redux/cartRedux.js"],"names":["getCart","cart","reducerName","createActionName","name","ADD_TO_CART","REMOVE_ONE","REMOVE_CART","GET_CART_LOC_STOR","addToCart","payload","type","removeOneFromCart","removeCart","getCartLocStor","loadCartRequest","dispatch","JSON","parse","localStorage","getItem","console","log","e","reducer","statePart","action","push","product","find","id","index","indexOf","splice","length"],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAYA,IAA5B;AAEP;;AACA,MAAMC,WAAW,GAAG,MAApB;;AACA,MAAMC,gBAAgB,GAAGC,IAAI,kBAAWF,WAAX,cAA0BE,IAA1B,CAA7B;AAEA;;;AACA,MAAMC,WAAW,GAAGF,gBAAgB,CAAC,aAAD,CAApC;AACA,MAAMG,UAAU,GAAGH,gBAAgB,CAAC,YAAD,CAAnC;AACA,MAAMI,WAAW,GAAGJ,gBAAgB,CAAC,aAAD,CAApC;AACA,MAAMK,iBAAiB,GAAGL,gBAAgB,CAAC,mBAAD,CAA1C;AAEA;;AACA,OAAO,MAAMM,SAAS,GAAGC,OAAO,KAAK;AAACA,EAAAA,OAAD;AAAUC,EAAAA,IAAI,EAAEN;AAAhB,CAAL,CAAzB;AACP,OAAO,MAAMO,iBAAiB,GAAGF,OAAO,KAAK;AAACA,EAAAA,OAAD;AAAUC,EAAAA,IAAI,EAAEL;AAAhB,CAAL,CAAjC;AACP,OAAO,MAAMO,UAAU,GAAG,OAAO;AAACF,EAAAA,IAAI,EAAEJ;AAAP,CAAP,CAAnB;AACP,OAAO,MAAMO,cAAc,GAAIJ,OAAO,KAAK;AAACA,EAAAA,OAAD;AAAUC,EAAAA,IAAI,EAAEH;AAAhB,CAAL,CAA/B;AAEP;;AAEA,OAAO,MAAMO,eAAe,GAAG,MAAM;AACnC,SAAO,MAAMC,QAAN,IAAkB;AAEvB,QAAI;AACF,UAAIf,IAAI,GAAG,MAAMgB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BrB,IAA3B;AACAe,MAAAA,QAAQ,CAACF,cAAc,CAACb,IAAD,CAAf,CAAR;AACD,KAJD,CAIE,OAAMsB,CAAN,EAAS;AACTF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD;AACF,GATD;AAUD,CAXM;AAaP;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,SAAS,GAAG,EAAb,EAAiBC,MAAM,GAAG,EAA1B,KAAiC;AAEtD,UAAQA,MAAM,CAACf,IAAf;AACE,SAAKN,WAAL;AAAkB;AAChB,cAAMJ,IAAI,GAAG,CAAC,GAAGwB,SAAJ,CAAb;AACAxB,QAAAA,IAAI,CAAC0B,IAAL,CAAUD,MAAM,CAAChB,OAAjB;AACA,eAAOT,IAAP;AACD;;AAAC,SAAKK,UAAL;AAAiB;AACjB,cAAMsB,OAAO,GAAGH,SAAS,CAACI,IAAV,CAAeD,OAAO,IAAIA,OAAO,CAACE,EAAR,KAAeJ,MAAM,CAAChB,OAAhD,CAAhB;AACA,cAAMqB,KAAK,GAAGN,SAAS,CAACO,OAAV,CAAkBJ,OAAlB,CAAd;AACAH,QAAAA,SAAS,CAACQ,MAAV,CAAiBF,KAAjB,EAAwB,CAAxB;AACA,eAAON,SAAS,CAACS,MAAV,KAAqB,CAArB,GAAyB,EAAzB,GAA8B,CAAC,GAAGT,SAAJ,CAArC;AACD;;AAAC,SAAKlB,WAAL;AAAkB;AAClB,cAAMN,IAAI,GAAG,EAAb;AACA,eAAOA,IAAP;AACD;;AAAC,SAAKO,iBAAL;AAAwB;AACxB,cAAMP,IAAI,GAAG,CAAC,GAAGwB,SAAJ,CAAb;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBrB,IAAzB;AACAA,QAAAA,IAAI,CAAC0B,IAAL,CAAUD,MAAM,CAAChB,OAAjB;AACA,eAAOT,IAAP;AACD;;AACD;AACE,aAAOwB,SAAP;AApBJ;AAsBD,CAxBM","sourcesContent":["// import axios from 'axios';\n\n/* selectors */\nexport const getCart = ({cart}) => cart;\n\n/* action name creator */\nconst reducerName = 'cart';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst ADD_TO_CART = createActionName('ADD_TO_CART');\nconst REMOVE_ONE = createActionName('REMOVE_ONE');\nconst REMOVE_CART = createActionName('REMOVE_CART');\nconst GET_CART_LOC_STOR = createActionName('GET_CART_LOC_STOR');\n\n/* action creators */\nexport const addToCart = payload => ({payload, type: ADD_TO_CART});\nexport const removeOneFromCart = payload => ({payload, type: REMOVE_ONE});\nexport const removeCart = () => ({type: REMOVE_CART});\nexport const getCartLocStor =  payload => ({payload, type: GET_CART_LOC_STOR});\n\n/* thunk creators */\n\nexport const loadCartRequest = () => {\n  return async dispatch => {\n\n    try {\n      let cart = await JSON.parse(localStorage.getItem('cart'));\n      console.log('HAHAHA cart', cart);\n      dispatch(getCartLocStor(cart));\n    } catch(e) {\n      console.log(e);\n    }\n  };\n};\n\n/* reducer */\nexport const reducer = (statePart = [], action = {}) => {\n\n  switch (action.type) {\n    case ADD_TO_CART: {\n      const cart = [...statePart];\n      cart.push(action.payload);\n      return cart;\n    } case REMOVE_ONE: {\n      const product = statePart.find(product => product.id === action.payload);\n      const index = statePart.indexOf(product);\n      statePart.splice(index, 1);\n      return statePart.length === 0 ? [] : [...statePart];\n    } case REMOVE_CART: {\n      const cart = [];\n      return cart;\n    } case GET_CART_LOC_STOR: {\n      const cart = [...statePart];\n      console.log('cartYYY: ', cart);\n      cart.push(action.payload);\n      return cart;\n    }\n    default:\n      return statePart;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
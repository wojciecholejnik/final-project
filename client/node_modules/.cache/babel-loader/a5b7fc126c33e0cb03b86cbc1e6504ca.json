{"ast":null,"code":"var _jsxFileName = \"/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Order/Order.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport styles from './Order.module.scss';\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\n\nclass Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      width: Math.max(document.documentElement.clientWidth)\n    };\n  }\n\n  changeWidth() {\n    this.setState({\n      width: Math.max(document.documentElement.clientWidth)\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          cakes = _this$props.cakes,\n          cupcakes = _this$props.cupcakes;\n    return React.createElement(\"div\", {\n      className: styles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.swiperDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"These are our cakes: \"), React.createElement(GridList, {\n      spacing: 15,\n      className: styles.gridList,\n      cols: Math.max(document.documentElement.clientWidth) > 600 ? 2.2 : 1.15,\n      cellHeight: 230,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, cakes.map(tile => React.createElement(GridListTile, {\n      component: NavLink,\n      to: '/product/' + tile._id,\n      key: tile._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: styles.image,\n      src: require('../../../images/products/cakes/' + tile.img),\n      alt: tile.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: tile.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: styles.swiperDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"... and cupcakes: \"), React.createElement(GridList, {\n      spacing: 15,\n      className: styles.gridList,\n      cols: Math.max(document.documentElement.clientWidth) > 600 ? 2.2 : 1.15,\n      cellHeight: 230,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, cupcakes.map(tile => React.createElement(GridListTile, {\n      key: tile._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: styles.image,\n      src: require('../../../images/products/cupcakes/' + tile.img),\n      alt: tile.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      className: styles.signature,\n      title: tile.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state)\n}); // const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n\nconst Container = connect(mapStateToProps)(Component);\nexport { // Component as Order,\nContainer as Order, Component as OrderComponent };","map":{"version":3,"sources":["/Users/wojtas/Desktop/Kodilla/final-project/src/components/views/Order/Order.js"],"names":["React","PropTypes","NavLink","GridList","GridListTile","GridListTileBar","styles","connect","getCakes","getCupcakes","Component","state","width","Math","max","document","documentElement","clientWidth","changeWidth","setState","render","props","cakes","cupcakes","root","swiperDiv","title","gridList","map","tile","_id","image","require","img","signature","propTypes","array","mapStateToProps","Container","Order","OrderComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\nimport styles from './Order.module.scss';\n\n\nimport { connect } from 'react-redux';\nimport { getCakes, getCupcakes } from '../../../redux/productsRedux';\n\n\nclass Component extends React.Component {\n  state = {\n    width: Math.max(document.documentElement.clientWidth),\n  }\n\n  changeWidth(){\n    this.setState({width: Math.max(document.documentElement.clientWidth)});\n  }\n\n  render(){\n    const {cakes, cupcakes} = this.props;\n\n    return (\n      <div className={styles.root}>\n\n        {/* Cakes horizontal swiper */}\n        <div className={styles.swiperDiv}>\n          <h2 className={styles.title}>These are our cakes: </h2>\n          <GridList spacing={15} className={styles.gridList} cols={Math.max(document.documentElement.clientWidth) > 600 ? 2.2 : 1.15} cellHeight={230}>\n            {cakes.map((tile) => (\n              <GridListTile component={NavLink} to={'/product/' + tile._id} key={tile._id}>\n                <img className={styles.image} src={require('../../../images/products/cakes/' + tile.img)} alt={tile.title} />\n                <GridListTileBar\n                  title={tile.title}\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n        </div>\n\n        {/* Cupcakes horizontal swiper */}\n        <div className={styles.swiperDiv}>\n          <h2 className={styles.title}>... and cupcakes: </h2>\n          <GridList spacing={15} className={styles.gridList} cols={Math.max(document.documentElement.clientWidth) > 600 ? 2.2 : 1.15} cellHeight={230}>\n            {cupcakes.map((tile) => (\n              <GridListTile key={tile._id}>\n                <img className={styles.image} src={require('../../../images/products/cupcakes/' + tile.img)} alt={tile.title} />\n                <GridListTileBar\n                  className={styles.signature}\n                  title={tile.title}\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nComponent.propTypes = {\n  cakes: PropTypes.array,\n  cupcakes: PropTypes.array,\n};\n\nconst mapStateToProps = state => ({\n  cakes: getCakes(state),\n  cupcakes: getCupcakes(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst Container = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as Order,\n  Container as Order,\n  Component as OrderComponent,\n};\n"]},"metadata":{},"sourceType":"module"}